### YamlMime:ManagedReference
items:
- uid: TwinSharp.CNC.BackwardsOnPath
  commentId: T:TwinSharp.CNC.BackwardsOnPath
  id: BackwardsOnPath
  parent: TwinSharp.CNC
  children:
  - TwinSharp.CNC.BackwardsOnPath.ActivateExternalPathVelocity
  - TwinSharp.CNC.BackwardsOnPath.EnableInterface
  - TwinSharp.CNC.BackwardsOnPath.ExternalPathVelocity
  - TwinSharp.CNC.BackwardsOnPath.ResetBackwardMotionMemory
  - TwinSharp.CNC.BackwardsOnPath.SelectBackwardMotion
  - TwinSharp.CNC.BackwardsOnPath.SelectSimulatedForwardMotion
  langs:
  - csharp
  - vb
  name: BackwardsOnPath
  nameWithType: BackwardsOnPath
  fullName: TwinSharp.CNC.BackwardsOnPath
  type: Class
  source:
    remote:
      path: TwinSharp/CNC/BackwardsOnPath.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: BackwardsOnPath
    path: ../TwinSharp/CNC/BackwardsOnPath.cs
    startLine: 7
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: The function for forward/backward motion on the path permits backward motion along the originally programmed path by means of a real-time signal when the NC program is active. Backward motion is terminated by resetting the real-time signal. Forward motion is then resumed.
  example: []
  syntax:
    content: public class BackwardsOnPath
    content.vb: Public Class BackwardsOnPath
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TwinSharp.CNC.BackwardsOnPath.SelectBackwardMotion
  commentId: P:TwinSharp.CNC.BackwardsOnPath.SelectBackwardMotion
  id: SelectBackwardMotion
  parent: TwinSharp.CNC.BackwardsOnPath
  langs:
  - csharp
  - vb
  name: SelectBackwardMotion
  nameWithType: BackwardsOnPath.SelectBackwardMotion
  fullName: TwinSharp.CNC.BackwardsOnPath.SelectBackwardMotion
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BackwardsOnPath.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SelectBackwardMotion
    path: ../TwinSharp/CNC/BackwardsOnPath.cs
    startLine: 68
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Select/deselect backward motion on the path In basic setting, M/H functions are executed without synchronisation(MOS) in this mode.
  example: []
  syntax:
    content: public bool SelectBackwardMotion { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SelectBackwardMotion As Boolean
  overload: TwinSharp.CNC.BackwardsOnPath.SelectBackwardMotion*
- uid: TwinSharp.CNC.BackwardsOnPath.EnableInterface
  commentId: P:TwinSharp.CNC.BackwardsOnPath.EnableInterface
  id: EnableInterface
  parent: TwinSharp.CNC.BackwardsOnPath
  langs:
  - csharp
  - vb
  name: EnableInterface
  nameWithType: BackwardsOnPath.EnableInterface
  fullName: TwinSharp.CNC.BackwardsOnPath.EnableInterface
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BackwardsOnPath.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: EnableInterface
    path: ../TwinSharp/CNC/BackwardsOnPath.cs
    startLine: 78
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Signal to CNC that we want to use this interface.
  example: []
  syntax:
    content: public bool EnableInterface { set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public WriteOnly Property EnableInterface As Boolean
  overload: TwinSharp.CNC.BackwardsOnPath.EnableInterface*
- uid: TwinSharp.CNC.BackwardsOnPath.SelectSimulatedForwardMotion
  commentId: P:TwinSharp.CNC.BackwardsOnPath.SelectSimulatedForwardMotion
  id: SelectSimulatedForwardMotion
  parent: TwinSharp.CNC.BackwardsOnPath
  langs:
  - csharp
  - vb
  name: SelectSimulatedForwardMotion
  nameWithType: BackwardsOnPath.SelectSimulatedForwardMotion
  fullName: TwinSharp.CNC.BackwardsOnPath.SelectSimulatedForwardMotion
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BackwardsOnPath.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SelectSimulatedForwardMotion
    path: ../TwinSharp/CNC/BackwardsOnPath.cs
    startLine: 86
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: 'Select/deselect simulated forward motion on the path In basic setting, M/H functions are executed without synchronisation (MOS) in this mode. Sections in the NC program can be skipped during program runtime in combination with the NC command #OPTIONAL EXECUTION.'
  example: []
  syntax:
    content: public bool SelectSimulatedForwardMotion { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SelectSimulatedForwardMotion As Boolean
  overload: TwinSharp.CNC.BackwardsOnPath.SelectSimulatedForwardMotion*
- uid: TwinSharp.CNC.BackwardsOnPath.ResetBackwardMotionMemory
  commentId: P:TwinSharp.CNC.BackwardsOnPath.ResetBackwardMotionMemory
  id: ResetBackwardMotionMemory
  parent: TwinSharp.CNC.BackwardsOnPath
  langs:
  - csharp
  - vb
  name: ResetBackwardMotionMemory
  nameWithType: BackwardsOnPath.ResetBackwardMotionMemory
  fullName: TwinSharp.CNC.BackwardsOnPath.ResetBackwardMotionMemory
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BackwardsOnPath.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ResetBackwardMotionMemory
    path: ../TwinSharp/CNC/BackwardsOnPath.cs
    startLine: 95
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Deselects backward motion memory No further NC block is saved in the memory. The memory is deleted. The backward motion memory can only be cleared if no NC program is active.
  example: []
  syntax:
    content: public bool ResetBackwardMotionMemory { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ResetBackwardMotionMemory As Boolean
  overload: TwinSharp.CNC.BackwardsOnPath.ResetBackwardMotionMemory*
- uid: TwinSharp.CNC.BackwardsOnPath.ExternalPathVelocity
  commentId: P:TwinSharp.CNC.BackwardsOnPath.ExternalPathVelocity
  id: ExternalPathVelocity
  parent: TwinSharp.CNC.BackwardsOnPath
  langs:
  - csharp
  - vb
  name: ExternalPathVelocity
  nameWithType: BackwardsOnPath.ExternalPathVelocity
  fullName: TwinSharp.CNC.BackwardsOnPath.ExternalPathVelocity
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BackwardsOnPath.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ExternalPathVelocity
    path: ../TwinSharp/CNC/BackwardsOnPath.cs
    startLine: 105
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: >-
    External path velocity specified. The path velocity setting is activated by the control unit ext_command_speed_valid. If the velocity specified in negative, the tool moves backwards along the path

    Unit: 1 Î¼m/s
  example: []
  syntax:
    content: public uint ExternalPathVelocity { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property ExternalPathVelocity As UInteger
  overload: TwinSharp.CNC.BackwardsOnPath.ExternalPathVelocity*
- uid: TwinSharp.CNC.BackwardsOnPath.ActivateExternalPathVelocity
  commentId: P:TwinSharp.CNC.BackwardsOnPath.ActivateExternalPathVelocity
  id: ActivateExternalPathVelocity
  parent: TwinSharp.CNC.BackwardsOnPath
  langs:
  - csharp
  - vb
  name: ActivateExternalPathVelocity
  nameWithType: BackwardsOnPath.ActivateExternalPathVelocity
  fullName: TwinSharp.CNC.BackwardsOnPath.ActivateExternalPathVelocity
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BackwardsOnPath.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ActivateExternalPathVelocity
    path: ../TwinSharp/CNC/BackwardsOnPath.cs
    startLine: 115
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Activate the velocity commanded in the ext_command_speed control unit. To reach the commanded velocity, all axes involved in the motion are accelerated or decelerated. If this value is TRUE, the sign is considered in the current path feed (active_feed_r control unit).
  example: []
  syntax:
    content: public bool ActivateExternalPathVelocity { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ActivateExternalPathVelocity As Boolean
  overload: TwinSharp.CNC.BackwardsOnPath.ActivateExternalPathVelocity*
references:
- uid: TwinSharp.CNC
  commentId: N:TwinSharp.CNC
  href: TwinSharp.html
  name: TwinSharp.CNC
  nameWithType: TwinSharp.CNC
  fullName: TwinSharp.CNC
  spec.csharp:
  - uid: TwinSharp
    name: TwinSharp
    href: TwinSharp.html
  - name: .
  - uid: TwinSharp.CNC
    name: CNC
    href: TwinSharp.CNC.html
  spec.vb:
  - uid: TwinSharp
    name: TwinSharp
    href: TwinSharp.html
  - name: .
  - uid: TwinSharp.CNC
    name: CNC
    href: TwinSharp.CNC.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TwinSharp.CNC.BackwardsOnPath.SelectBackwardMotion*
  commentId: Overload:TwinSharp.CNC.BackwardsOnPath.SelectBackwardMotion
  href: TwinSharp.CNC.BackwardsOnPath.html#TwinSharp_CNC_BackwardsOnPath_SelectBackwardMotion
  name: SelectBackwardMotion
  nameWithType: BackwardsOnPath.SelectBackwardMotion
  fullName: TwinSharp.CNC.BackwardsOnPath.SelectBackwardMotion
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TwinSharp.CNC.BackwardsOnPath.EnableInterface*
  commentId: Overload:TwinSharp.CNC.BackwardsOnPath.EnableInterface
  href: TwinSharp.CNC.BackwardsOnPath.html#TwinSharp_CNC_BackwardsOnPath_EnableInterface
  name: EnableInterface
  nameWithType: BackwardsOnPath.EnableInterface
  fullName: TwinSharp.CNC.BackwardsOnPath.EnableInterface
- uid: TwinSharp.CNC.BackwardsOnPath.SelectSimulatedForwardMotion*
  commentId: Overload:TwinSharp.CNC.BackwardsOnPath.SelectSimulatedForwardMotion
  href: TwinSharp.CNC.BackwardsOnPath.html#TwinSharp_CNC_BackwardsOnPath_SelectSimulatedForwardMotion
  name: SelectSimulatedForwardMotion
  nameWithType: BackwardsOnPath.SelectSimulatedForwardMotion
  fullName: TwinSharp.CNC.BackwardsOnPath.SelectSimulatedForwardMotion
- uid: TwinSharp.CNC.BackwardsOnPath.ResetBackwardMotionMemory*
  commentId: Overload:TwinSharp.CNC.BackwardsOnPath.ResetBackwardMotionMemory
  href: TwinSharp.CNC.BackwardsOnPath.html#TwinSharp_CNC_BackwardsOnPath_ResetBackwardMotionMemory
  name: ResetBackwardMotionMemory
  nameWithType: BackwardsOnPath.ResetBackwardMotionMemory
  fullName: TwinSharp.CNC.BackwardsOnPath.ResetBackwardMotionMemory
- uid: TwinSharp.CNC.BackwardsOnPath.ExternalPathVelocity*
  commentId: Overload:TwinSharp.CNC.BackwardsOnPath.ExternalPathVelocity
  href: TwinSharp.CNC.BackwardsOnPath.html#TwinSharp_CNC_BackwardsOnPath_ExternalPathVelocity
  name: ExternalPathVelocity
  nameWithType: BackwardsOnPath.ExternalPathVelocity
  fullName: TwinSharp.CNC.BackwardsOnPath.ExternalPathVelocity
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: TwinSharp.CNC.BackwardsOnPath.ActivateExternalPathVelocity*
  commentId: Overload:TwinSharp.CNC.BackwardsOnPath.ActivateExternalPathVelocity
  href: TwinSharp.CNC.BackwardsOnPath.html#TwinSharp_CNC_BackwardsOnPath_ActivateExternalPathVelocity
  name: ActivateExternalPathVelocity
  nameWithType: BackwardsOnPath.ActivateExternalPathVelocity
  fullName: TwinSharp.CNC.BackwardsOnPath.ActivateExternalPathVelocity
