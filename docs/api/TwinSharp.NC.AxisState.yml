### YamlMime:ManagedReference
items:
- uid: TwinSharp.NC.AxisState
  commentId: T:TwinSharp.NC.AxisState
  id: AxisState
  parent: TwinSharp.NC
  children:
  - TwinSharp.NC.AxisState.ActualAcceleration
  - TwinSharp.NC.AxisState.ActualPosition
  - TwinSharp.NC.AxisState.ActualPositionModulo
  - TwinSharp.NC.AxisState.ActualRotationModulo
  - TwinSharp.NC.AxisState.ActualVelocity
  - TwinSharp.NC.AxisState.CouplingState
  - TwinSharp.NC.AxisState.CouplingTableIndex
  - TwinSharp.NC.AxisState.CycleCounter
  - TwinSharp.NC.AxisState.DelayedErrorCode
  - TwinSharp.NC.AxisState.ErrorCode
  - TwinSharp.NC.AxisState.ExpectedTargetPosition
  - TwinSharp.NC.AxisState.InitializeCommandCounter
  - TwinSharp.NC.AxisState.LagErrorPeakMaximum
  - TwinSharp.NC.AxisState.LagErrorPeakMinimum
  - TwinSharp.NC.AxisState.LagErrorPosition
  - TwinSharp.NC.AxisState.LagErrorPositionWithDeadTimeCompensation
  - TwinSharp.NC.AxisState.OnlineData
  - TwinSharp.NC.AxisState.PositioningTimeLastMotionCommand
  - TwinSharp.NC.AxisState.RemainingTravelDistance
  - TwinSharp.NC.AxisState.RemaniningTravelTime
  - TwinSharp.NC.AxisState.ResetCommandCounter
  - TwinSharp.NC.AxisState.SetAcceleration
  - TwinSharp.NC.AxisState.SetCommandNumber
  - TwinSharp.NC.AxisState.SetCouplingFactor
  - TwinSharp.NC.AxisState.SetJerk
  - TwinSharp.NC.AxisState.SetModuloRotation
  - TwinSharp.NC.AxisState.SetPosition
  - TwinSharp.NC.AxisState.SetPositionModulo
  - TwinSharp.NC.AxisState.SetTorque
  - TwinSharp.NC.AxisState.SetTorqueChange
  - TwinSharp.NC.AxisState.SetTravelDirection
  - TwinSharp.NC.AxisState.SetVelocity
  - TwinSharp.NC.AxisState.SetVelocityOverride
  - TwinSharp.NC.AxisState.TorqueOffset
  - TwinSharp.NC.AxisState.UncorrectedSetAcceleration
  - TwinSharp.NC.AxisState.UncorrectedSetPosition
  - TwinSharp.NC.AxisState.UncorrectedSetTravelDirection
  - TwinSharp.NC.AxisState.UncorrectedSetVelocity
  langs:
  - csharp
  - vb
  name: AxisState
  nameWithType: AxisState
  fullName: TwinSharp.NC.AxisState
  type: Class
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: AxisState
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 13
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: >-
    Represents the state of an NC axis. 

    Provides access to various properties and methods to read and manipulate 

    the state of the axis, including position, velocity, acceleration, torque, 

    and error codes.
  example: []
  syntax:
    content: public class AxisState
    content.vb: Public Class AxisState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TwinSharp.NC.AxisState.OnlineData
  commentId: P:TwinSharp.NC.AxisState.OnlineData
  id: OnlineData
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: OnlineData
  nameWithType: AxisState.OnlineData
  fullName: TwinSharp.NC.AxisState.OnlineData
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: OnlineData
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 28
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: The online data of the axis.
  example: []
  syntax:
    content: public NCAXISSTATE_ONLINESTRUCT OnlineData { get; }
    parameters: []
    return:
      type: TwinSharp.NC.NCAXISSTATE_ONLINESTRUCT
    content.vb: Public ReadOnly Property OnlineData As NCAXISSTATE_ONLINESTRUCT
  overload: TwinSharp.NC.AxisState.OnlineData*
- uid: TwinSharp.NC.AxisState.ErrorCode
  commentId: P:TwinSharp.NC.AxisState.ErrorCode
  id: ErrorCode
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: ErrorCode
  nameWithType: AxisState.ErrorCode
  fullName: TwinSharp.NC.AxisState.ErrorCode
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ErrorCode
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 36
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Axis state error code.
  example: []
  syntax:
    content: public uint ErrorCode { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property ErrorCode As UInteger
  overload: TwinSharp.NC.AxisState.ErrorCode*
- uid: TwinSharp.NC.AxisState.CycleCounter
  commentId: P:TwinSharp.NC.AxisState.CycleCounter
  id: CycleCounter
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: CycleCounter
  nameWithType: AxisState.CycleCounter
  fullName: TwinSharp.NC.AxisState.CycleCounter
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: CycleCounter
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 45
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: >-
    Set cycle counter

    (SAF timestamp)
  example: []
  syntax:
    content: public uint CycleCounter { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property CycleCounter As UInteger
  overload: TwinSharp.NC.AxisState.CycleCounter*
- uid: TwinSharp.NC.AxisState.SetPosition
  commentId: P:TwinSharp.NC.AxisState.SetPosition
  id: SetPosition
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: SetPosition
  nameWithType: AxisState.SetPosition
  fullName: TwinSharp.NC.AxisState.SetPosition
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SetPosition
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 53
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Set position
  example: []
  syntax:
    content: public double SetPosition { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SetPosition As Double
  overload: TwinSharp.NC.AxisState.SetPosition*
- uid: TwinSharp.NC.AxisState.SetPositionModulo
  commentId: P:TwinSharp.NC.AxisState.SetPositionModulo
  id: SetPositionModulo
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: SetPositionModulo
  nameWithType: AxisState.SetPositionModulo
  fullName: TwinSharp.NC.AxisState.SetPositionModulo
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SetPositionModulo
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 61
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Modulo set position
  example: []
  syntax:
    content: public double SetPositionModulo { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SetPositionModulo As Double
  overload: TwinSharp.NC.AxisState.SetPositionModulo*
- uid: TwinSharp.NC.AxisState.SetModuloRotation
  commentId: P:TwinSharp.NC.AxisState.SetModuloRotation
  id: SetModuloRotation
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: SetModuloRotation
  nameWithType: AxisState.SetModuloRotation
  fullName: TwinSharp.NC.AxisState.SetModuloRotation
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SetModuloRotation
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 69
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Modulo set rotation
  example: []
  syntax:
    content: public int SetModuloRotation { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SetModuloRotation As Integer
  overload: TwinSharp.NC.AxisState.SetModuloRotation*
- uid: TwinSharp.NC.AxisState.SetTravelDirection
  commentId: P:TwinSharp.NC.AxisState.SetTravelDirection
  id: SetTravelDirection
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: SetTravelDirection
  nameWithType: AxisState.SetTravelDirection
  fullName: TwinSharp.NC.AxisState.SetTravelDirection
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SetTravelDirection
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 77
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Set travel direction [-1.0, 0.0, 1.0]
  example: []
  syntax:
    content: public double SetTravelDirection { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SetTravelDirection As Double
  overload: TwinSharp.NC.AxisState.SetTravelDirection*
- uid: TwinSharp.NC.AxisState.SetVelocity
  commentId: P:TwinSharp.NC.AxisState.SetVelocity
  id: SetVelocity
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: SetVelocity
  nameWithType: AxisState.SetVelocity
  fullName: TwinSharp.NC.AxisState.SetVelocity
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SetVelocity
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 85
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Set velocity
  example: []
  syntax:
    content: public double SetVelocity { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SetVelocity As Double
  overload: TwinSharp.NC.AxisState.SetVelocity*
- uid: TwinSharp.NC.AxisState.SetAcceleration
  commentId: P:TwinSharp.NC.AxisState.SetAcceleration
  id: SetAcceleration
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: SetAcceleration
  nameWithType: AxisState.SetAcceleration
  fullName: TwinSharp.NC.AxisState.SetAcceleration
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SetAcceleration
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 93
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Set acceleration
  example: []
  syntax:
    content: public double SetAcceleration { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SetAcceleration As Double
  overload: TwinSharp.NC.AxisState.SetAcceleration*
- uid: TwinSharp.NC.AxisState.SetJerk
  commentId: P:TwinSharp.NC.AxisState.SetJerk
  id: SetJerk
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: SetJerk
  nameWithType: AxisState.SetJerk
  fullName: TwinSharp.NC.AxisState.SetJerk
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SetJerk
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 101
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Set jerk (time derivative of the set acceleration)
  example: []
  syntax:
    content: public double SetJerk { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SetJerk As Double
  overload: TwinSharp.NC.AxisState.SetJerk*
- uid: TwinSharp.NC.AxisState.SetTorque
  commentId: P:TwinSharp.NC.AxisState.SetTorque
  id: SetTorque
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: SetTorque
  nameWithType: AxisState.SetTorque
  fullName: TwinSharp.NC.AxisState.SetTorque
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SetTorque
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 109
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Set torque (rot. motor) or set force(linear motor) ("SetTorque")
  example: []
  syntax:
    content: public double SetTorque { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SetTorque As Double
  overload: TwinSharp.NC.AxisState.SetTorque*
- uid: TwinSharp.NC.AxisState.SetCouplingFactor
  commentId: P:TwinSharp.NC.AxisState.SetCouplingFactor
  id: SetCouplingFactor
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: SetCouplingFactor
  nameWithType: AxisState.SetCouplingFactor
  fullName: TwinSharp.NC.AxisState.SetCouplingFactor
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SetCouplingFactor
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 117
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Set coupling factor (set gear ratio)
  example: []
  syntax:
    content: public double SetCouplingFactor { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SetCouplingFactor As Double
  overload: TwinSharp.NC.AxisState.SetCouplingFactor*
- uid: TwinSharp.NC.AxisState.ExpectedTargetPosition
  commentId: P:TwinSharp.NC.AxisState.ExpectedTargetPosition
  id: ExpectedTargetPosition
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: ExpectedTargetPosition
  nameWithType: AxisState.ExpectedTargetPosition
  fullName: TwinSharp.NC.AxisState.ExpectedTargetPosition
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ExpectedTargetPosition
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 125
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Expected target position
  example: []
  syntax:
    content: public double ExpectedTargetPosition { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ExpectedTargetPosition As Double
  overload: TwinSharp.NC.AxisState.ExpectedTargetPosition*
- uid: TwinSharp.NC.AxisState.RemainingTravelDistance
  commentId: P:TwinSharp.NC.AxisState.RemainingTravelDistance
  id: RemainingTravelDistance
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: RemainingTravelDistance
  nameWithType: AxisState.RemainingTravelDistance
  fullName: TwinSharp.NC.AxisState.RemainingTravelDistance
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: RemainingTravelDistance
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 151
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Remaining travel distance e.g. mm (SERVO).
  example: []
  syntax:
    content: public double RemainingTravelDistance { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property RemainingTravelDistance As Double
  overload: TwinSharp.NC.AxisState.RemainingTravelDistance*
- uid: TwinSharp.NC.AxisState.RemaniningTravelTime
  commentId: P:TwinSharp.NC.AxisState.RemaniningTravelTime
  id: RemaniningTravelTime
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: RemaniningTravelTime
  nameWithType: AxisState.RemaniningTravelTime
  fullName: TwinSharp.NC.AxisState.RemaniningTravelTime
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: RemaniningTravelTime
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 163
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Remaining travel time seconds (SERVO).
  example: []
  syntax:
    content: public double RemaniningTravelTime { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property RemaniningTravelTime As Double
  overload: TwinSharp.NC.AxisState.RemaniningTravelTime*
- uid: TwinSharp.NC.AxisState.SetCommandNumber
  commentId: P:TwinSharp.NC.AxisState.SetCommandNumber
  id: SetCommandNumber
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: SetCommandNumber
  nameWithType: AxisState.SetCommandNumber
  fullName: TwinSharp.NC.AxisState.SetCommandNumber
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SetCommandNumber
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 175
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Set command number ("CmdNo")
  example: []
  syntax:
    content: public int SetCommandNumber { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SetCommandNumber As Integer
  overload: TwinSharp.NC.AxisState.SetCommandNumber*
- uid: TwinSharp.NC.AxisState.PositioningTimeLastMotionCommand
  commentId: P:TwinSharp.NC.AxisState.PositioningTimeLastMotionCommand
  id: PositioningTimeLastMotionCommand
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: PositioningTimeLastMotionCommand
  nameWithType: AxisState.PositioningTimeLastMotionCommand
  fullName: TwinSharp.NC.AxisState.PositioningTimeLastMotionCommand
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: PositioningTimeLastMotionCommand
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 184
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: >-
    Positioning time of the last motion command

    (start → target position window)
  example: []
  syntax:
    content: public double PositioningTimeLastMotionCommand { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property PositioningTimeLastMotionCommand As Double
  overload: TwinSharp.NC.AxisState.PositioningTimeLastMotionCommand*
- uid: TwinSharp.NC.AxisState.SetVelocityOverride
  commentId: P:TwinSharp.NC.AxisState.SetVelocityOverride
  id: SetVelocityOverride
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: SetVelocityOverride
  nameWithType: AxisState.SetVelocityOverride
  fullName: TwinSharp.NC.AxisState.SetVelocityOverride
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SetVelocityOverride
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 192
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Set override value for velocity [0.0…1.0] 1.0=100%
  example: []
  syntax:
    content: public double SetVelocityOverride { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SetVelocityOverride As Double
  overload: TwinSharp.NC.AxisState.SetVelocityOverride*
- uid: TwinSharp.NC.AxisState.UncorrectedSetPosition
  commentId: P:TwinSharp.NC.AxisState.UncorrectedSetPosition
  id: UncorrectedSetPosition
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: UncorrectedSetPosition
  nameWithType: AxisState.UncorrectedSetPosition
  fullName: TwinSharp.NC.AxisState.UncorrectedSetPosition
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: UncorrectedSetPosition
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 200
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Uncorrected set position
  example: []
  syntax:
    content: public double UncorrectedSetPosition { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property UncorrectedSetPosition As Double
  overload: TwinSharp.NC.AxisState.UncorrectedSetPosition*
- uid: TwinSharp.NC.AxisState.UncorrectedSetTravelDirection
  commentId: P:TwinSharp.NC.AxisState.UncorrectedSetTravelDirection
  id: UncorrectedSetTravelDirection
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: UncorrectedSetTravelDirection
  nameWithType: AxisState.UncorrectedSetTravelDirection
  fullName: TwinSharp.NC.AxisState.UncorrectedSetTravelDirection
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: UncorrectedSetTravelDirection
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 208
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Uncorrected set travel direction [-1.0, 0.0, 1.0]
  example: []
  syntax:
    content: public double UncorrectedSetTravelDirection { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property UncorrectedSetTravelDirection As Double
  overload: TwinSharp.NC.AxisState.UncorrectedSetTravelDirection*
- uid: TwinSharp.NC.AxisState.UncorrectedSetVelocity
  commentId: P:TwinSharp.NC.AxisState.UncorrectedSetVelocity
  id: UncorrectedSetVelocity
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: UncorrectedSetVelocity
  nameWithType: AxisState.UncorrectedSetVelocity
  fullName: TwinSharp.NC.AxisState.UncorrectedSetVelocity
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: UncorrectedSetVelocity
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 216
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Uncorrected set velocity e.g. mm/s
  example: []
  syntax:
    content: public double UncorrectedSetVelocity { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property UncorrectedSetVelocity As Double
  overload: TwinSharp.NC.AxisState.UncorrectedSetVelocity*
- uid: TwinSharp.NC.AxisState.UncorrectedSetAcceleration
  commentId: P:TwinSharp.NC.AxisState.UncorrectedSetAcceleration
  id: UncorrectedSetAcceleration
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: UncorrectedSetAcceleration
  nameWithType: AxisState.UncorrectedSetAcceleration
  fullName: TwinSharp.NC.AxisState.UncorrectedSetAcceleration
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: UncorrectedSetAcceleration
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 224
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Uncorrected set acceleration e.g. mm/s^2
  example: []
  syntax:
    content: public double UncorrectedSetAcceleration { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property UncorrectedSetAcceleration As Double
  overload: TwinSharp.NC.AxisState.UncorrectedSetAcceleration*
- uid: TwinSharp.NC.AxisState.CouplingState
  commentId: P:TwinSharp.NC.AxisState.CouplingState
  id: CouplingState
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: CouplingState
  nameWithType: AxisState.CouplingState
  fullName: TwinSharp.NC.AxisState.CouplingState
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: CouplingState
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 232
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Coupling state
  example: []
  syntax:
    content: public uint CouplingState { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property CouplingState As UInteger
  overload: TwinSharp.NC.AxisState.CouplingState*
- uid: TwinSharp.NC.AxisState.CouplingTableIndex
  commentId: P:TwinSharp.NC.AxisState.CouplingTableIndex
  id: CouplingTableIndex
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: CouplingTableIndex
  nameWithType: AxisState.CouplingTableIndex
  fullName: TwinSharp.NC.AxisState.CouplingTableIndex
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: CouplingTableIndex
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 241
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Coupling table index
  example: []
  syntax:
    content: public uint CouplingTableIndex { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property CouplingTableIndex As UInteger
  overload: TwinSharp.NC.AxisState.CouplingTableIndex*
- uid: TwinSharp.NC.AxisState.DelayedErrorCode
  commentId: P:TwinSharp.NC.AxisState.DelayedErrorCode
  id: DelayedErrorCode
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: DelayedErrorCode
  nameWithType: AxisState.DelayedErrorCode
  fullName: TwinSharp.NC.AxisState.DelayedErrorCode
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: DelayedErrorCode
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 249
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Delayed error code (error pre-warning) in case of a delayed error reaction (see bit ErrorPropagationDelayed)
  example: []
  syntax:
    content: public uint DelayedErrorCode { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property DelayedErrorCode As UInteger
  overload: TwinSharp.NC.AxisState.DelayedErrorCode*
- uid: TwinSharp.NC.AxisState.InitializeCommandCounter
  commentId: P:TwinSharp.NC.AxisState.InitializeCommandCounter
  id: InitializeCommandCounter
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: InitializeCommandCounter
  nameWithType: AxisState.InitializeCommandCounter
  fullName: TwinSharp.NC.AxisState.InitializeCommandCounter
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: InitializeCommandCounter
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 257
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Counter for initialization command (InitializeCommandCounter)
  example: []
  syntax:
    content: public uint InitializeCommandCounter { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property InitializeCommandCounter As UInteger
  overload: TwinSharp.NC.AxisState.InitializeCommandCounter*
- uid: TwinSharp.NC.AxisState.ResetCommandCounter
  commentId: P:TwinSharp.NC.AxisState.ResetCommandCounter
  id: ResetCommandCounter
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: ResetCommandCounter
  nameWithType: AxisState.ResetCommandCounter
  fullName: TwinSharp.NC.AxisState.ResetCommandCounter
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ResetCommandCounter
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 265
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Counter for reset command (ResetCommandCounter)
  example: []
  syntax:
    content: public uint ResetCommandCounter { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property ResetCommandCounter As UInteger
  overload: TwinSharp.NC.AxisState.ResetCommandCounter*
- uid: TwinSharp.NC.AxisState.SetTorqueChange
  commentId: P:TwinSharp.NC.AxisState.SetTorqueChange
  id: SetTorqueChange
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: SetTorqueChange
  nameWithType: AxisState.SetTorqueChange
  fullName: TwinSharp.NC.AxisState.SetTorqueChange
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SetTorqueChange
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 273
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Set torque change (rot. motor) or set force change (linear motor) (time derivative of the set torque or set force)
  example: []
  syntax:
    content: public double SetTorqueChange { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SetTorqueChange As Double
  overload: TwinSharp.NC.AxisState.SetTorqueChange*
- uid: TwinSharp.NC.AxisState.TorqueOffset
  commentId: P:TwinSharp.NC.AxisState.TorqueOffset
  id: TorqueOffset
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: TorqueOffset
  nameWithType: AxisState.TorqueOffset
  fullName: TwinSharp.NC.AxisState.TorqueOffset
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: TorqueOffset
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 282
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: >-
    Additive set torque (rot. motor) or additive set force (linear motor) for pre-control.

    ("TorqueOffset")
  example: []
  syntax:
    content: public double TorqueOffset { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property TorqueOffset As Double
  overload: TwinSharp.NC.AxisState.TorqueOffset*
- uid: TwinSharp.NC.AxisState.ActualPosition
  commentId: P:TwinSharp.NC.AxisState.ActualPosition
  id: ActualPosition
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: ActualPosition
  nameWithType: AxisState.ActualPosition
  fullName: TwinSharp.NC.AxisState.ActualPosition
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ActualPosition
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 291
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Actual position (charge with actual position compensation value) ("ActPos")
  example: []
  syntax:
    content: public double ActualPosition { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ActualPosition As Double
  overload: TwinSharp.NC.AxisState.ActualPosition*
- uid: TwinSharp.NC.AxisState.ActualPositionModulo
  commentId: P:TwinSharp.NC.AxisState.ActualPositionModulo
  id: ActualPositionModulo
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: ActualPositionModulo
  nameWithType: AxisState.ActualPositionModulo
  fullName: TwinSharp.NC.AxisState.ActualPositionModulo
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ActualPositionModulo
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 299
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Modulo actual position "ActPosModulo"
  example: []
  syntax:
    content: public double ActualPositionModulo { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ActualPositionModulo As Double
  overload: TwinSharp.NC.AxisState.ActualPositionModulo*
- uid: TwinSharp.NC.AxisState.ActualRotationModulo
  commentId: P:TwinSharp.NC.AxisState.ActualRotationModulo
  id: ActualRotationModulo
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: ActualRotationModulo
  nameWithType: AxisState.ActualRotationModulo
  fullName: TwinSharp.NC.AxisState.ActualRotationModulo
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ActualRotationModulo
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 307
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Modulo actual rotation
  example: []
  syntax:
    content: public int ActualRotationModulo { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ActualRotationModulo As Integer
  overload: TwinSharp.NC.AxisState.ActualRotationModulo*
- uid: TwinSharp.NC.AxisState.ActualVelocity
  commentId: P:TwinSharp.NC.AxisState.ActualVelocity
  id: ActualVelocity
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: ActualVelocity
  nameWithType: AxisState.ActualVelocity
  fullName: TwinSharp.NC.AxisState.ActualVelocity
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ActualVelocity
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 315
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: 'Optional: Actual velocity "ActVelo"'
  example: []
  syntax:
    content: public double ActualVelocity { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ActualVelocity As Double
  overload: TwinSharp.NC.AxisState.ActualVelocity*
- uid: TwinSharp.NC.AxisState.ActualAcceleration
  commentId: P:TwinSharp.NC.AxisState.ActualAcceleration
  id: ActualAcceleration
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: ActualAcceleration
  nameWithType: AxisState.ActualAcceleration
  fullName: TwinSharp.NC.AxisState.ActualAcceleration
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ActualAcceleration
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 323
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: 'Optional: Actual acceleration "ActAcc"'
  example: []
  syntax:
    content: public double ActualAcceleration { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ActualAcceleration As Double
  overload: TwinSharp.NC.AxisState.ActualAcceleration*
- uid: TwinSharp.NC.AxisState.LagErrorPosition
  commentId: P:TwinSharp.NC.AxisState.LagErrorPosition
  id: LagErrorPosition
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: LagErrorPosition
  nameWithType: AxisState.LagErrorPosition
  fullName: TwinSharp.NC.AxisState.LagErrorPosition
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: LagErrorPosition
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 331
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Lag error position(without dead time compensation)
  example: []
  syntax:
    content: public double LagErrorPosition { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LagErrorPosition As Double
  overload: TwinSharp.NC.AxisState.LagErrorPosition*
- uid: TwinSharp.NC.AxisState.LagErrorPositionWithDeadTimeCompensation
  commentId: P:TwinSharp.NC.AxisState.LagErrorPositionWithDeadTimeCompensation
  id: LagErrorPositionWithDeadTimeCompensation
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: LagErrorPositionWithDeadTimeCompensation
  nameWithType: AxisState.LagErrorPositionWithDeadTimeCompensation
  fullName: TwinSharp.NC.AxisState.LagErrorPositionWithDeadTimeCompensation
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: LagErrorPositionWithDeadTimeCompensation
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 339
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Lag error position(with dead time compensation) "PosDiff"
  example: []
  syntax:
    content: public double LagErrorPositionWithDeadTimeCompensation { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LagErrorPositionWithDeadTimeCompensation As Double
  overload: TwinSharp.NC.AxisState.LagErrorPositionWithDeadTimeCompensation*
- uid: TwinSharp.NC.AxisState.LagErrorPeakMaximum
  commentId: P:TwinSharp.NC.AxisState.LagErrorPeakMaximum
  id: LagErrorPeakMaximum
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: LagErrorPeakMaximum
  nameWithType: AxisState.LagErrorPeakMaximum
  fullName: TwinSharp.NC.AxisState.LagErrorPeakMaximum
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: LagErrorPeakMaximum
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 347
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Peak hold value for maximum negative lag error of the position
  example: []
  syntax:
    content: public double LagErrorPeakMaximum { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LagErrorPeakMaximum As Double
  overload: TwinSharp.NC.AxisState.LagErrorPeakMaximum*
- uid: TwinSharp.NC.AxisState.LagErrorPeakMinimum
  commentId: P:TwinSharp.NC.AxisState.LagErrorPeakMinimum
  id: LagErrorPeakMinimum
  parent: TwinSharp.NC.AxisState
  langs:
  - csharp
  - vb
  name: LagErrorPeakMinimum
  nameWithType: AxisState.LagErrorPeakMinimum
  fullName: TwinSharp.NC.AxisState.LagErrorPeakMinimum
  type: Property
  source:
    remote:
      path: TwinSharp/NC/AxisState.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: LagErrorPeakMinimum
    path: ../TwinSharp/NC/AxisState.cs
    startLine: 355
  assemblies:
  - TwinSharp
  namespace: TwinSharp.NC
  summary: Peak hold value for minimum positive lag error of the position
  example: []
  syntax:
    content: public double LagErrorPeakMinimum { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LagErrorPeakMinimum As Double
  overload: TwinSharp.NC.AxisState.LagErrorPeakMinimum*
references:
- uid: TwinSharp.NC
  commentId: N:TwinSharp.NC
  href: TwinSharp.html
  name: TwinSharp.NC
  nameWithType: TwinSharp.NC
  fullName: TwinSharp.NC
  spec.csharp:
  - uid: TwinSharp
    name: TwinSharp
    href: TwinSharp.html
  - name: .
  - uid: TwinSharp.NC
    name: NC
    href: TwinSharp.NC.html
  spec.vb:
  - uid: TwinSharp
    name: TwinSharp
    href: TwinSharp.html
  - name: .
  - uid: TwinSharp.NC
    name: NC
    href: TwinSharp.NC.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TwinSharp.NC.AxisState.OnlineData*
  commentId: Overload:TwinSharp.NC.AxisState.OnlineData
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_OnlineData
  name: OnlineData
  nameWithType: AxisState.OnlineData
  fullName: TwinSharp.NC.AxisState.OnlineData
- uid: TwinSharp.NC.NCAXISSTATE_ONLINESTRUCT
  commentId: T:TwinSharp.NC.NCAXISSTATE_ONLINESTRUCT
  parent: TwinSharp.NC
  href: TwinSharp.NC.NCAXISSTATE_ONLINESTRUCT.html
  name: NCAXISSTATE_ONLINESTRUCT
  nameWithType: NCAXISSTATE_ONLINESTRUCT
  fullName: TwinSharp.NC.NCAXISSTATE_ONLINESTRUCT
- uid: TwinSharp.NC.AxisState.ErrorCode*
  commentId: Overload:TwinSharp.NC.AxisState.ErrorCode
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_ErrorCode
  name: ErrorCode
  nameWithType: AxisState.ErrorCode
  fullName: TwinSharp.NC.AxisState.ErrorCode
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: TwinSharp.NC.AxisState.CycleCounter*
  commentId: Overload:TwinSharp.NC.AxisState.CycleCounter
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_CycleCounter
  name: CycleCounter
  nameWithType: AxisState.CycleCounter
  fullName: TwinSharp.NC.AxisState.CycleCounter
- uid: TwinSharp.NC.AxisState.SetPosition*
  commentId: Overload:TwinSharp.NC.AxisState.SetPosition
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_SetPosition
  name: SetPosition
  nameWithType: AxisState.SetPosition
  fullName: TwinSharp.NC.AxisState.SetPosition
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: TwinSharp.NC.AxisState.SetPositionModulo*
  commentId: Overload:TwinSharp.NC.AxisState.SetPositionModulo
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_SetPositionModulo
  name: SetPositionModulo
  nameWithType: AxisState.SetPositionModulo
  fullName: TwinSharp.NC.AxisState.SetPositionModulo
- uid: TwinSharp.NC.AxisState.SetModuloRotation*
  commentId: Overload:TwinSharp.NC.AxisState.SetModuloRotation
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_SetModuloRotation
  name: SetModuloRotation
  nameWithType: AxisState.SetModuloRotation
  fullName: TwinSharp.NC.AxisState.SetModuloRotation
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TwinSharp.NC.AxisState.SetTravelDirection*
  commentId: Overload:TwinSharp.NC.AxisState.SetTravelDirection
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_SetTravelDirection
  name: SetTravelDirection
  nameWithType: AxisState.SetTravelDirection
  fullName: TwinSharp.NC.AxisState.SetTravelDirection
- uid: TwinSharp.NC.AxisState.SetVelocity*
  commentId: Overload:TwinSharp.NC.AxisState.SetVelocity
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_SetVelocity
  name: SetVelocity
  nameWithType: AxisState.SetVelocity
  fullName: TwinSharp.NC.AxisState.SetVelocity
- uid: TwinSharp.NC.AxisState.SetAcceleration*
  commentId: Overload:TwinSharp.NC.AxisState.SetAcceleration
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_SetAcceleration
  name: SetAcceleration
  nameWithType: AxisState.SetAcceleration
  fullName: TwinSharp.NC.AxisState.SetAcceleration
- uid: TwinSharp.NC.AxisState.SetJerk*
  commentId: Overload:TwinSharp.NC.AxisState.SetJerk
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_SetJerk
  name: SetJerk
  nameWithType: AxisState.SetJerk
  fullName: TwinSharp.NC.AxisState.SetJerk
- uid: TwinSharp.NC.AxisState.SetTorque*
  commentId: Overload:TwinSharp.NC.AxisState.SetTorque
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_SetTorque
  name: SetTorque
  nameWithType: AxisState.SetTorque
  fullName: TwinSharp.NC.AxisState.SetTorque
- uid: TwinSharp.NC.AxisState.SetCouplingFactor*
  commentId: Overload:TwinSharp.NC.AxisState.SetCouplingFactor
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_SetCouplingFactor
  name: SetCouplingFactor
  nameWithType: AxisState.SetCouplingFactor
  fullName: TwinSharp.NC.AxisState.SetCouplingFactor
- uid: TwinSharp.NC.AxisState.ExpectedTargetPosition*
  commentId: Overload:TwinSharp.NC.AxisState.ExpectedTargetPosition
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_ExpectedTargetPosition
  name: ExpectedTargetPosition
  nameWithType: AxisState.ExpectedTargetPosition
  fullName: TwinSharp.NC.AxisState.ExpectedTargetPosition
- uid: TwinSharp.NC.AxisState.RemainingTravelDistance*
  commentId: Overload:TwinSharp.NC.AxisState.RemainingTravelDistance
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_RemainingTravelDistance
  name: RemainingTravelDistance
  nameWithType: AxisState.RemainingTravelDistance
  fullName: TwinSharp.NC.AxisState.RemainingTravelDistance
- uid: TwinSharp.NC.AxisState.RemaniningTravelTime*
  commentId: Overload:TwinSharp.NC.AxisState.RemaniningTravelTime
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_RemaniningTravelTime
  name: RemaniningTravelTime
  nameWithType: AxisState.RemaniningTravelTime
  fullName: TwinSharp.NC.AxisState.RemaniningTravelTime
- uid: TwinSharp.NC.AxisState.SetCommandNumber*
  commentId: Overload:TwinSharp.NC.AxisState.SetCommandNumber
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_SetCommandNumber
  name: SetCommandNumber
  nameWithType: AxisState.SetCommandNumber
  fullName: TwinSharp.NC.AxisState.SetCommandNumber
- uid: TwinSharp.NC.AxisState.PositioningTimeLastMotionCommand*
  commentId: Overload:TwinSharp.NC.AxisState.PositioningTimeLastMotionCommand
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_PositioningTimeLastMotionCommand
  name: PositioningTimeLastMotionCommand
  nameWithType: AxisState.PositioningTimeLastMotionCommand
  fullName: TwinSharp.NC.AxisState.PositioningTimeLastMotionCommand
- uid: TwinSharp.NC.AxisState.SetVelocityOverride*
  commentId: Overload:TwinSharp.NC.AxisState.SetVelocityOverride
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_SetVelocityOverride
  name: SetVelocityOverride
  nameWithType: AxisState.SetVelocityOverride
  fullName: TwinSharp.NC.AxisState.SetVelocityOverride
- uid: TwinSharp.NC.AxisState.UncorrectedSetPosition*
  commentId: Overload:TwinSharp.NC.AxisState.UncorrectedSetPosition
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_UncorrectedSetPosition
  name: UncorrectedSetPosition
  nameWithType: AxisState.UncorrectedSetPosition
  fullName: TwinSharp.NC.AxisState.UncorrectedSetPosition
- uid: TwinSharp.NC.AxisState.UncorrectedSetTravelDirection*
  commentId: Overload:TwinSharp.NC.AxisState.UncorrectedSetTravelDirection
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_UncorrectedSetTravelDirection
  name: UncorrectedSetTravelDirection
  nameWithType: AxisState.UncorrectedSetTravelDirection
  fullName: TwinSharp.NC.AxisState.UncorrectedSetTravelDirection
- uid: TwinSharp.NC.AxisState.UncorrectedSetVelocity*
  commentId: Overload:TwinSharp.NC.AxisState.UncorrectedSetVelocity
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_UncorrectedSetVelocity
  name: UncorrectedSetVelocity
  nameWithType: AxisState.UncorrectedSetVelocity
  fullName: TwinSharp.NC.AxisState.UncorrectedSetVelocity
- uid: TwinSharp.NC.AxisState.UncorrectedSetAcceleration*
  commentId: Overload:TwinSharp.NC.AxisState.UncorrectedSetAcceleration
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_UncorrectedSetAcceleration
  name: UncorrectedSetAcceleration
  nameWithType: AxisState.UncorrectedSetAcceleration
  fullName: TwinSharp.NC.AxisState.UncorrectedSetAcceleration
- uid: TwinSharp.NC.AxisState.CouplingState*
  commentId: Overload:TwinSharp.NC.AxisState.CouplingState
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_CouplingState
  name: CouplingState
  nameWithType: AxisState.CouplingState
  fullName: TwinSharp.NC.AxisState.CouplingState
- uid: TwinSharp.NC.AxisState.CouplingTableIndex*
  commentId: Overload:TwinSharp.NC.AxisState.CouplingTableIndex
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_CouplingTableIndex
  name: CouplingTableIndex
  nameWithType: AxisState.CouplingTableIndex
  fullName: TwinSharp.NC.AxisState.CouplingTableIndex
- uid: TwinSharp.NC.AxisState.DelayedErrorCode*
  commentId: Overload:TwinSharp.NC.AxisState.DelayedErrorCode
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_DelayedErrorCode
  name: DelayedErrorCode
  nameWithType: AxisState.DelayedErrorCode
  fullName: TwinSharp.NC.AxisState.DelayedErrorCode
- uid: TwinSharp.NC.AxisState.InitializeCommandCounter*
  commentId: Overload:TwinSharp.NC.AxisState.InitializeCommandCounter
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_InitializeCommandCounter
  name: InitializeCommandCounter
  nameWithType: AxisState.InitializeCommandCounter
  fullName: TwinSharp.NC.AxisState.InitializeCommandCounter
- uid: TwinSharp.NC.AxisState.ResetCommandCounter*
  commentId: Overload:TwinSharp.NC.AxisState.ResetCommandCounter
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_ResetCommandCounter
  name: ResetCommandCounter
  nameWithType: AxisState.ResetCommandCounter
  fullName: TwinSharp.NC.AxisState.ResetCommandCounter
- uid: TwinSharp.NC.AxisState.SetTorqueChange*
  commentId: Overload:TwinSharp.NC.AxisState.SetTorqueChange
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_SetTorqueChange
  name: SetTorqueChange
  nameWithType: AxisState.SetTorqueChange
  fullName: TwinSharp.NC.AxisState.SetTorqueChange
- uid: TwinSharp.NC.AxisState.TorqueOffset*
  commentId: Overload:TwinSharp.NC.AxisState.TorqueOffset
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_TorqueOffset
  name: TorqueOffset
  nameWithType: AxisState.TorqueOffset
  fullName: TwinSharp.NC.AxisState.TorqueOffset
- uid: TwinSharp.NC.AxisState.ActualPosition*
  commentId: Overload:TwinSharp.NC.AxisState.ActualPosition
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_ActualPosition
  name: ActualPosition
  nameWithType: AxisState.ActualPosition
  fullName: TwinSharp.NC.AxisState.ActualPosition
- uid: TwinSharp.NC.AxisState.ActualPositionModulo*
  commentId: Overload:TwinSharp.NC.AxisState.ActualPositionModulo
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_ActualPositionModulo
  name: ActualPositionModulo
  nameWithType: AxisState.ActualPositionModulo
  fullName: TwinSharp.NC.AxisState.ActualPositionModulo
- uid: TwinSharp.NC.AxisState.ActualRotationModulo*
  commentId: Overload:TwinSharp.NC.AxisState.ActualRotationModulo
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_ActualRotationModulo
  name: ActualRotationModulo
  nameWithType: AxisState.ActualRotationModulo
  fullName: TwinSharp.NC.AxisState.ActualRotationModulo
- uid: TwinSharp.NC.AxisState.ActualVelocity*
  commentId: Overload:TwinSharp.NC.AxisState.ActualVelocity
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_ActualVelocity
  name: ActualVelocity
  nameWithType: AxisState.ActualVelocity
  fullName: TwinSharp.NC.AxisState.ActualVelocity
- uid: TwinSharp.NC.AxisState.ActualAcceleration*
  commentId: Overload:TwinSharp.NC.AxisState.ActualAcceleration
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_ActualAcceleration
  name: ActualAcceleration
  nameWithType: AxisState.ActualAcceleration
  fullName: TwinSharp.NC.AxisState.ActualAcceleration
- uid: TwinSharp.NC.AxisState.LagErrorPosition*
  commentId: Overload:TwinSharp.NC.AxisState.LagErrorPosition
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_LagErrorPosition
  name: LagErrorPosition
  nameWithType: AxisState.LagErrorPosition
  fullName: TwinSharp.NC.AxisState.LagErrorPosition
- uid: TwinSharp.NC.AxisState.LagErrorPositionWithDeadTimeCompensation*
  commentId: Overload:TwinSharp.NC.AxisState.LagErrorPositionWithDeadTimeCompensation
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_LagErrorPositionWithDeadTimeCompensation
  name: LagErrorPositionWithDeadTimeCompensation
  nameWithType: AxisState.LagErrorPositionWithDeadTimeCompensation
  fullName: TwinSharp.NC.AxisState.LagErrorPositionWithDeadTimeCompensation
- uid: TwinSharp.NC.AxisState.LagErrorPeakMaximum*
  commentId: Overload:TwinSharp.NC.AxisState.LagErrorPeakMaximum
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_LagErrorPeakMaximum
  name: LagErrorPeakMaximum
  nameWithType: AxisState.LagErrorPeakMaximum
  fullName: TwinSharp.NC.AxisState.LagErrorPeakMaximum
- uid: TwinSharp.NC.AxisState.LagErrorPeakMinimum*
  commentId: Overload:TwinSharp.NC.AxisState.LagErrorPeakMinimum
  href: TwinSharp.NC.AxisState.html#TwinSharp_NC_AxisState_LagErrorPeakMinimum
  name: LagErrorPeakMinimum
  nameWithType: AxisState.LagErrorPeakMinimum
  fullName: TwinSharp.NC.AxisState.LagErrorPeakMinimum
