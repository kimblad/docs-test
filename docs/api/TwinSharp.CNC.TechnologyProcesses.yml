### YamlMime:ManagedReference
items:
- uid: TwinSharp.CNC.TechnologyProcesses
  commentId: T:TwinSharp.CNC.TechnologyProcesses
  id: TechnologyProcesses
  parent: TwinSharp.CNC
  children:
  - TwinSharp.CNC.TechnologyProcesses.AcknowledgeTecnologyUnit(System.Int32)
  - TwinSharp.CNC.TechnologyProcesses.CountToBeAcknowledgedInThisBlock
  - TwinSharp.CNC.TechnologyProcesses.Dispose
  - TwinSharp.CNC.TechnologyProcesses.GetBlockByBlockSynchTechnologies
  - TwinSharp.CNC.TechnologyProcesses.HcodeNeedsAcknowledge
  - TwinSharp.CNC.TechnologyProcesses.McodeNeedsAcknowledge
  langs:
  - csharp
  - vb
  name: TechnologyProcesses
  nameWithType: TechnologyProcesses
  fullName: TwinSharp.CNC.TechnologyProcesses
  type: Class
  source:
    remote:
      path: TwinSharp/CNC/TechnologyProcesses.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: TechnologyProcesses
    path: ../TwinSharp/CNC/TechnologyProcesses.cs
    startLine: 8
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: >-
    The TechnologyProcesses class manages the interaction with CNC technology units via an ADS client.

    It handles the acknowledgment of M and H codes, processes notifications from the CNC, and provides methods to read and acknowledge technology units.
  example: []
  syntax:
    content: 'public class TechnologyProcesses : IDisposable'
    content.vb: Public Class TechnologyProcesses Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TwinSharp.CNC.TechnologyProcesses.McodeNeedsAcknowledge
  commentId: E:TwinSharp.CNC.TechnologyProcesses.McodeNeedsAcknowledge
  id: McodeNeedsAcknowledge
  parent: TwinSharp.CNC.TechnologyProcesses
  langs:
  - csharp
  - vb
  name: McodeNeedsAcknowledge
  nameWithType: TechnologyProcesses.McodeNeedsAcknowledge
  fullName: TwinSharp.CNC.TechnologyProcesses.McodeNeedsAcknowledge
  type: Event
  source:
    remote:
      path: TwinSharp/CNC/TechnologyProcesses.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: McodeNeedsAcknowledge
    path: ../TwinSharp/CNC/TechnologyProcesses.cs
    startLine: 13
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Event that is triggered when a M code needs to be acknowledged.
  example: []
  syntax:
    content: public event EventHandler<McodeNeedsAcknowledgeEventArgs>? McodeNeedsAcknowledge
    return:
      type: System.EventHandler{TwinSharp.CNC.McodeNeedsAcknowledgeEventArgs}
    content.vb: Public Event McodeNeedsAcknowledge As EventHandler(Of McodeNeedsAcknowledgeEventArgs)
- uid: TwinSharp.CNC.TechnologyProcesses.HcodeNeedsAcknowledge
  commentId: E:TwinSharp.CNC.TechnologyProcesses.HcodeNeedsAcknowledge
  id: HcodeNeedsAcknowledge
  parent: TwinSharp.CNC.TechnologyProcesses
  langs:
  - csharp
  - vb
  name: HcodeNeedsAcknowledge
  nameWithType: TechnologyProcesses.HcodeNeedsAcknowledge
  fullName: TwinSharp.CNC.TechnologyProcesses.HcodeNeedsAcknowledge
  type: Event
  source:
    remote:
      path: TwinSharp/CNC/TechnologyProcesses.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: HcodeNeedsAcknowledge
    path: ../TwinSharp/CNC/TechnologyProcesses.cs
    startLine: 18
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Event that is triggered when a H code needs to be acknowledged.
  example: []
  syntax:
    content: public event EventHandler<HcodeNeedsAcknowledgeEventArgs>? HcodeNeedsAcknowledge
    return:
      type: System.EventHandler{TwinSharp.CNC.HcodeNeedsAcknowledgeEventArgs}
    content.vb: Public Event HcodeNeedsAcknowledge As EventHandler(Of HcodeNeedsAcknowledgeEventArgs)
- uid: TwinSharp.CNC.TechnologyProcesses.GetBlockByBlockSynchTechnologies
  commentId: M:TwinSharp.CNC.TechnologyProcesses.GetBlockByBlockSynchTechnologies
  id: GetBlockByBlockSynchTechnologies
  parent: TwinSharp.CNC.TechnologyProcesses
  langs:
  - csharp
  - vb
  name: GetBlockByBlockSynchTechnologies()
  nameWithType: TechnologyProcesses.GetBlockByBlockSynchTechnologies()
  fullName: TwinSharp.CNC.TechnologyProcesses.GetBlockByBlockSynchTechnologies()
  type: Method
  source:
    remote:
      path: TwinSharp/CNC/TechnologyProcesses.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: GetBlockByBlockSynchTechnologies
    path: ../TwinSharp/CNC/TechnologyProcesses.cs
    startLine: 141
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Array of M/H/S/T technology functions with block-by-block synchronisation.
  example: []
  syntax:
    content: public TECHNO_UNIT_CH[] GetBlockByBlockSynchTechnologies()
    return:
      type: TwinSharp.CNC.TECHNO_UNIT_CH[]
      description: ''
    content.vb: Public Function GetBlockByBlockSynchTechnologies() As TECHNO_UNIT_CH()
  overload: TwinSharp.CNC.TechnologyProcesses.GetBlockByBlockSynchTechnologies*
- uid: TwinSharp.CNC.TechnologyProcesses.AcknowledgeTecnologyUnit(System.Int32)
  commentId: M:TwinSharp.CNC.TechnologyProcesses.AcknowledgeTecnologyUnit(System.Int32)
  id: AcknowledgeTecnologyUnit(System.Int32)
  parent: TwinSharp.CNC.TechnologyProcesses
  langs:
  - csharp
  - vb
  name: AcknowledgeTecnologyUnit(int)
  nameWithType: TechnologyProcesses.AcknowledgeTecnologyUnit(int)
  fullName: TwinSharp.CNC.TechnologyProcesses.AcknowledgeTecnologyUnit(int)
  type: Method
  source:
    remote:
      path: TwinSharp/CNC/TechnologyProcesses.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: AcknowledgeTecnologyUnit
    path: ../TwinSharp/CNC/TechnologyProcesses.cs
    startLine: 153
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Acknowledge a technology unit. This is necessary to inform the CNC that processing of the NC program should continue.
  example: []
  syntax:
    content: public void AcknowledgeTecnologyUnit(int unitsIndex)
    parameters:
    - id: unitsIndex
      type: System.Int32
      description: ''
    content.vb: Public Sub AcknowledgeTecnologyUnit(unitsIndex As Integer)
  overload: TwinSharp.CNC.TechnologyProcesses.AcknowledgeTecnologyUnit*
  nameWithType.vb: TechnologyProcesses.AcknowledgeTecnologyUnit(Integer)
  fullName.vb: TwinSharp.CNC.TechnologyProcesses.AcknowledgeTecnologyUnit(Integer)
  name.vb: AcknowledgeTecnologyUnit(Integer)
- uid: TwinSharp.CNC.TechnologyProcesses.Dispose
  commentId: M:TwinSharp.CNC.TechnologyProcesses.Dispose
  id: Dispose
  parent: TwinSharp.CNC.TechnologyProcesses
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TechnologyProcesses.Dispose()
  fullName: TwinSharp.CNC.TechnologyProcesses.Dispose()
  type: Method
  source:
    remote:
      path: TwinSharp/CNC/TechnologyProcesses.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: Dispose
    path: ../TwinSharp/CNC/TechnologyProcesses.cs
    startLine: 191
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Dispose the object. Deletes device notifications and handles on ADS side.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: TwinSharp.CNC.TechnologyProcesses.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: TwinSharp.CNC.TechnologyProcesses.CountToBeAcknowledgedInThisBlock
  commentId: P:TwinSharp.CNC.TechnologyProcesses.CountToBeAcknowledgedInThisBlock
  id: CountToBeAcknowledgedInThisBlock
  parent: TwinSharp.CNC.TechnologyProcesses
  langs:
  - csharp
  - vb
  name: CountToBeAcknowledgedInThisBlock
  nameWithType: TechnologyProcesses.CountToBeAcknowledgedInThisBlock
  fullName: TwinSharp.CNC.TechnologyProcesses.CountToBeAcknowledgedInThisBlock
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/TechnologyProcesses.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: CountToBeAcknowledgedInThisBlock
    path: ../TwinSharp/CNC/TechnologyProcesses.cs
    startLine: 206
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Number of entries in the array ATechnoUnitChannel_Std ( = number of technology functions to be acknowledged in this block)
  example: []
  syntax:
    content: public ushort CountToBeAcknowledgedInThisBlock { get; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public ReadOnly Property CountToBeAcknowledgedInThisBlock As UShort
  overload: TwinSharp.CNC.TechnologyProcesses.CountToBeAcknowledgedInThisBlock*
references:
- uid: TwinSharp.CNC
  commentId: N:TwinSharp.CNC
  href: TwinSharp.html
  name: TwinSharp.CNC
  nameWithType: TwinSharp.CNC
  fullName: TwinSharp.CNC
  spec.csharp:
  - uid: TwinSharp
    name: TwinSharp
    href: TwinSharp.html
  - name: .
  - uid: TwinSharp.CNC
    name: CNC
    href: TwinSharp.CNC.html
  spec.vb:
  - uid: TwinSharp
    name: TwinSharp
    href: TwinSharp.html
  - name: .
  - uid: TwinSharp.CNC
    name: CNC
    href: TwinSharp.CNC.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{TwinSharp.CNC.McodeNeedsAcknowledgeEventArgs}
  commentId: T:System.EventHandler{TwinSharp.CNC.McodeNeedsAcknowledgeEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<McodeNeedsAcknowledgeEventArgs>
  nameWithType: EventHandler<McodeNeedsAcknowledgeEventArgs>
  fullName: System.EventHandler<TwinSharp.CNC.McodeNeedsAcknowledgeEventArgs>
  nameWithType.vb: EventHandler(Of McodeNeedsAcknowledgeEventArgs)
  fullName.vb: System.EventHandler(Of TwinSharp.CNC.McodeNeedsAcknowledgeEventArgs)
  name.vb: EventHandler(Of McodeNeedsAcknowledgeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: TwinSharp.CNC.McodeNeedsAcknowledgeEventArgs
    name: McodeNeedsAcknowledgeEventArgs
    href: TwinSharp.CNC.McodeNeedsAcknowledgeEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: TwinSharp.CNC.McodeNeedsAcknowledgeEventArgs
    name: McodeNeedsAcknowledgeEventArgs
    href: TwinSharp.CNC.McodeNeedsAcknowledgeEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System.EventHandler{TwinSharp.CNC.HcodeNeedsAcknowledgeEventArgs}
  commentId: T:System.EventHandler{TwinSharp.CNC.HcodeNeedsAcknowledgeEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<HcodeNeedsAcknowledgeEventArgs>
  nameWithType: EventHandler<HcodeNeedsAcknowledgeEventArgs>
  fullName: System.EventHandler<TwinSharp.CNC.HcodeNeedsAcknowledgeEventArgs>
  nameWithType.vb: EventHandler(Of HcodeNeedsAcknowledgeEventArgs)
  fullName.vb: System.EventHandler(Of TwinSharp.CNC.HcodeNeedsAcknowledgeEventArgs)
  name.vb: EventHandler(Of HcodeNeedsAcknowledgeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: TwinSharp.CNC.HcodeNeedsAcknowledgeEventArgs
    name: HcodeNeedsAcknowledgeEventArgs
    href: TwinSharp.CNC.HcodeNeedsAcknowledgeEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: TwinSharp.CNC.HcodeNeedsAcknowledgeEventArgs
    name: HcodeNeedsAcknowledgeEventArgs
    href: TwinSharp.CNC.HcodeNeedsAcknowledgeEventArgs.html
  - name: )
- uid: TwinSharp.CNC.TechnologyProcesses.GetBlockByBlockSynchTechnologies*
  commentId: Overload:TwinSharp.CNC.TechnologyProcesses.GetBlockByBlockSynchTechnologies
  href: TwinSharp.CNC.TechnologyProcesses.html#TwinSharp_CNC_TechnologyProcesses_GetBlockByBlockSynchTechnologies
  name: GetBlockByBlockSynchTechnologies
  nameWithType: TechnologyProcesses.GetBlockByBlockSynchTechnologies
  fullName: TwinSharp.CNC.TechnologyProcesses.GetBlockByBlockSynchTechnologies
- uid: TwinSharp.CNC.TECHNO_UNIT_CH[]
  isExternal: true
  href: TwinSharp.CNC.TECHNO_UNIT_CH.html
  name: TECHNO_UNIT_CH[]
  nameWithType: TECHNO_UNIT_CH[]
  fullName: TwinSharp.CNC.TECHNO_UNIT_CH[]
  nameWithType.vb: TECHNO_UNIT_CH()
  fullName.vb: TwinSharp.CNC.TECHNO_UNIT_CH()
  name.vb: TECHNO_UNIT_CH()
  spec.csharp:
  - uid: TwinSharp.CNC.TECHNO_UNIT_CH
    name: TECHNO_UNIT_CH
    href: TwinSharp.CNC.TECHNO_UNIT_CH.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TwinSharp.CNC.TECHNO_UNIT_CH
    name: TECHNO_UNIT_CH
    href: TwinSharp.CNC.TECHNO_UNIT_CH.html
  - name: (
  - name: )
- uid: TwinSharp.CNC.TechnologyProcesses.AcknowledgeTecnologyUnit*
  commentId: Overload:TwinSharp.CNC.TechnologyProcesses.AcknowledgeTecnologyUnit
  href: TwinSharp.CNC.TechnologyProcesses.html#TwinSharp_CNC_TechnologyProcesses_AcknowledgeTecnologyUnit_System_Int32_
  name: AcknowledgeTecnologyUnit
  nameWithType: TechnologyProcesses.AcknowledgeTecnologyUnit
  fullName: TwinSharp.CNC.TechnologyProcesses.AcknowledgeTecnologyUnit
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TwinSharp.CNC.TechnologyProcesses.Dispose*
  commentId: Overload:TwinSharp.CNC.TechnologyProcesses.Dispose
  href: TwinSharp.CNC.TechnologyProcesses.html#TwinSharp_CNC_TechnologyProcesses_Dispose
  name: Dispose
  nameWithType: TechnologyProcesses.Dispose
  fullName: TwinSharp.CNC.TechnologyProcesses.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: TwinSharp.CNC.TechnologyProcesses.CountToBeAcknowledgedInThisBlock*
  commentId: Overload:TwinSharp.CNC.TechnologyProcesses.CountToBeAcknowledgedInThisBlock
  href: TwinSharp.CNC.TechnologyProcesses.html#TwinSharp_CNC_TechnologyProcesses_CountToBeAcknowledgedInThisBlock
  name: CountToBeAcknowledgedInThisBlock
  nameWithType: TechnologyProcesses.CountToBeAcknowledgedInThisBlock
  fullName: TwinSharp.CNC.TechnologyProcesses.CountToBeAcknowledgedInThisBlock
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
