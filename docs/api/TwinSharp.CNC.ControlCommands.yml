### YamlMime:ManagedReference
items:
- uid: TwinSharp.CNC.ControlCommands
  commentId: T:TwinSharp.CNC.ControlCommands
  id: ControlCommands
  parent: TwinSharp.CNC
  children:
  - TwinSharp.CNC.ControlCommands.ChannelModeActive
  - TwinSharp.CNC.ControlCommands.ChannelModeCommanded
  - TwinSharp.CNC.ControlCommands.OptionalStop
  - TwinSharp.CNC.ControlCommands.SkipMode
  langs:
  - csharp
  - vb
  name: ControlCommands
  nameWithType: ControlCommands
  fullName: TwinSharp.CNC.ControlCommands
  type: Class
  source:
    remote:
      path: TwinSharp/CNC/ControlCommands.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ControlCommands
    path: ../TwinSharp/CNC/ControlCommands.cs
    startLine: 9
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: >-
    The ControlCommands class provides methods to interact with and control various aspects of the CNC.

    It allows for the activation and deactivation of skip modes, reading and setting the current and commanded channel modes,

    and enabling or disabling optional stops during NC program execution.
  example: []
  syntax:
    content: public class ControlCommands
    content.vb: Public Class ControlCommands
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TwinSharp.CNC.ControlCommands.SkipMode
  commentId: P:TwinSharp.CNC.ControlCommands.SkipMode
  id: SkipMode
  parent: TwinSharp.CNC.ControlCommands
  langs:
  - csharp
  - vb
  name: SkipMode
  nameWithType: ControlCommands.SkipMode
  fullName: TwinSharp.CNC.ControlCommands.SkipMode
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/ControlCommands.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SkipMode
    path: ../TwinSharp/CNC/ControlCommands.cs
    startLine: 26
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: >-
    Activates/deactivates skip mode at interpreter level for the NC program. The status of skip mode is only evaluated at the start of the NC program. Switchover during execution of an NC program has no effect.

    Skip levels active simultaneously are enabled by bitwise ORing.

    Example:

    Enable all skip levels by setting 0x3FF.
  example: []
  syntax:
    content: public SkipModes SkipMode { get; set; }
    parameters: []
    return:
      type: TwinSharp.CNC.SkipModes
    content.vb: Public Property SkipMode As SkipModes
  overload: TwinSharp.CNC.ControlCommands.SkipMode*
- uid: TwinSharp.CNC.ControlCommands.ChannelModeActive
  commentId: P:TwinSharp.CNC.ControlCommands.ChannelModeActive
  id: ChannelModeActive
  parent: TwinSharp.CNC.ControlCommands
  langs:
  - csharp
  - vb
  name: ChannelModeActive
  nameWithType: ControlCommands.ChannelModeActive
  fullName: TwinSharp.CNC.ControlCommands.ChannelModeActive
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/ControlCommands.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ChannelModeActive
    path: ../TwinSharp/CNC/ControlCommands.cs
    startLine: 43
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Current special channel mode such as syntax check or machining time calculation
  example: []
  syntax:
    content: public ChannelMode ChannelModeActive { get; }
    parameters: []
    return:
      type: TwinSharp.CNC.ChannelMode
    content.vb: Public ReadOnly Property ChannelModeActive As ChannelMode
  overload: TwinSharp.CNC.ControlCommands.ChannelModeActive*
- uid: TwinSharp.CNC.ControlCommands.ChannelModeCommanded
  commentId: P:TwinSharp.CNC.ControlCommands.ChannelModeCommanded
  id: ChannelModeCommanded
  parent: TwinSharp.CNC.ControlCommands
  langs:
  - csharp
  - vb
  name: ChannelModeCommanded
  nameWithType: ControlCommands.ChannelModeCommanded
  fullName: TwinSharp.CNC.ControlCommands.ChannelModeCommanded
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/ControlCommands.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ChannelModeCommanded
    path: ../TwinSharp/CNC/ControlCommands.cs
    startLine: 55
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Selection of a special channel mode such as syntax check or machining time calculation
  example: []
  syntax:
    content: public ChannelMode ChannelModeCommanded { get; set; }
    parameters: []
    return:
      type: TwinSharp.CNC.ChannelMode
    content.vb: Public Property ChannelModeCommanded As ChannelMode
  overload: TwinSharp.CNC.ControlCommands.ChannelModeCommanded*
- uid: TwinSharp.CNC.ControlCommands.OptionalStop
  commentId: P:TwinSharp.CNC.ControlCommands.OptionalStop
  id: OptionalStop
  parent: TwinSharp.CNC.ControlCommands
  langs:
  - csharp
  - vb
  name: OptionalStop
  nameWithType: ControlCommands.OptionalStop
  fullName: TwinSharp.CNC.ControlCommands.OptionalStop
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/ControlCommands.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: OptionalStop
    path: ../TwinSharp/CNC/ControlCommands.cs
    startLine: 74
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: >-
    Activating/deactivating optional stop.

    If the function M01(optional stop) is programmed in the current block of the NC program, set this element to the value TRUE to stop at block end (ramped-down deceleration complying with the permissible accelerations).

    The following block can be enabled by activating the element “continue machining” if the NC kernel indicates that all axes are located within the control window by resetting the status flag wait_axes_in_position_r.
  example: []
  syntax:
    content: public bool OptionalStop { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OptionalStop As Boolean
  overload: TwinSharp.CNC.ControlCommands.OptionalStop*
references:
- uid: TwinSharp.CNC
  commentId: N:TwinSharp.CNC
  href: TwinSharp.html
  name: TwinSharp.CNC
  nameWithType: TwinSharp.CNC
  fullName: TwinSharp.CNC
  spec.csharp:
  - uid: TwinSharp
    name: TwinSharp
    href: TwinSharp.html
  - name: .
  - uid: TwinSharp.CNC
    name: CNC
    href: TwinSharp.CNC.html
  spec.vb:
  - uid: TwinSharp
    name: TwinSharp
    href: TwinSharp.html
  - name: .
  - uid: TwinSharp.CNC
    name: CNC
    href: TwinSharp.CNC.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TwinSharp.CNC.ControlCommands.SkipMode*
  commentId: Overload:TwinSharp.CNC.ControlCommands.SkipMode
  href: TwinSharp.CNC.ControlCommands.html#TwinSharp_CNC_ControlCommands_SkipMode
  name: SkipMode
  nameWithType: ControlCommands.SkipMode
  fullName: TwinSharp.CNC.ControlCommands.SkipMode
- uid: TwinSharp.CNC.SkipModes
  commentId: T:TwinSharp.CNC.SkipModes
  parent: TwinSharp.CNC
  href: TwinSharp.CNC.SkipModes.html
  name: SkipModes
  nameWithType: SkipModes
  fullName: TwinSharp.CNC.SkipModes
- uid: TwinSharp.CNC.ControlCommands.ChannelModeActive*
  commentId: Overload:TwinSharp.CNC.ControlCommands.ChannelModeActive
  href: TwinSharp.CNC.ControlCommands.html#TwinSharp_CNC_ControlCommands_ChannelModeActive
  name: ChannelModeActive
  nameWithType: ControlCommands.ChannelModeActive
  fullName: TwinSharp.CNC.ControlCommands.ChannelModeActive
- uid: TwinSharp.CNC.ChannelMode
  commentId: T:TwinSharp.CNC.ChannelMode
  parent: TwinSharp.CNC
  href: TwinSharp.CNC.ChannelMode.html
  name: ChannelMode
  nameWithType: ChannelMode
  fullName: TwinSharp.CNC.ChannelMode
- uid: TwinSharp.CNC.ControlCommands.ChannelModeCommanded*
  commentId: Overload:TwinSharp.CNC.ControlCommands.ChannelModeCommanded
  href: TwinSharp.CNC.ControlCommands.html#TwinSharp_CNC_ControlCommands_ChannelModeCommanded
  name: ChannelModeCommanded
  nameWithType: ControlCommands.ChannelModeCommanded
  fullName: TwinSharp.CNC.ControlCommands.ChannelModeCommanded
- uid: TwinSharp.CNC.ControlCommands.OptionalStop*
  commentId: Overload:TwinSharp.CNC.ControlCommands.OptionalStop
  href: TwinSharp.CNC.ControlCommands.html#TwinSharp_CNC_ControlCommands_OptionalStop
  name: OptionalStop
  nameWithType: ControlCommands.OptionalStop
  fullName: TwinSharp.CNC.ControlCommands.OptionalStop
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
