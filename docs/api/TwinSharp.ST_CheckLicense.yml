### YamlMime:ManagedReference
items:
- uid: TwinSharp.ST_CheckLicense
  commentId: T:TwinSharp.ST_CheckLicense
  id: ST_CheckLicense
  parent: TwinSharp
  children:
  - TwinSharp.ST_CheckLicense.#ctor(System.Byte[],System.String)
  - TwinSharp.ST_CheckLicense.ExpirationTime
  - TwinSharp.ST_CheckLicense.ExpirationTimeString
  - TwinSharp.ST_CheckLicense.LicenseId
  - TwinSharp.ST_CheckLicense.LicenseName
  - TwinSharp.ST_CheckLicense.ToString
  - TwinSharp.ST_CheckLicense.eResult
  - TwinSharp.ST_CheckLicense.nCount
  langs:
  - csharp
  - vb
  name: ST_CheckLicense
  nameWithType: ST_CheckLicense
  fullName: TwinSharp.ST_CheckLicense
  type: Struct
  source:
    remote:
      path: TwinSharp/Structs.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ST_CheckLicense
    path: ../TwinSharp/Structs.cs
    startLine: 50
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: Structure with license information.
  example: []
  syntax:
    content: public struct ST_CheckLicense
    content.vb: Public Structure ST_CheckLicense
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: TwinSharp.ST_CheckLicense.LicenseId
  commentId: F:TwinSharp.ST_CheckLicense.LicenseId
  id: LicenseId
  parent: TwinSharp.ST_CheckLicense
  langs:
  - csharp
  - vb
  name: LicenseId
  nameWithType: ST_CheckLicense.LicenseId
  fullName: TwinSharp.ST_CheckLicense.LicenseId
  type: Field
  source:
    remote:
      path: TwinSharp/Structs.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: LicenseId
    path: ../TwinSharp/Structs.cs
    startLine: 55
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: License ID
  example: []
  syntax:
    content: public readonly Guid LicenseId
    return:
      type: System.Guid
    content.vb: Public ReadOnly LicenseId As Guid
- uid: TwinSharp.ST_CheckLicense.ExpirationTime
  commentId: F:TwinSharp.ST_CheckLicense.ExpirationTime
  id: ExpirationTime
  parent: TwinSharp.ST_CheckLicense
  langs:
  - csharp
  - vb
  name: ExpirationTime
  nameWithType: ST_CheckLicense.ExpirationTime
  fullName: TwinSharp.ST_CheckLicense.ExpirationTime
  type: Field
  source:
    remote:
      path: TwinSharp/Structs.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ExpirationTime
    path: ../TwinSharp/Structs.cs
    startLine: 60
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: Expiration time of the license
  example: []
  syntax:
    content: public readonly DateTime ExpirationTime
    return:
      type: System.DateTime
    content.vb: Public ReadOnly ExpirationTime As Date
- uid: TwinSharp.ST_CheckLicense.ExpirationTimeString
  commentId: F:TwinSharp.ST_CheckLicense.ExpirationTimeString
  id: ExpirationTimeString
  parent: TwinSharp.ST_CheckLicense
  langs:
  - csharp
  - vb
  name: ExpirationTimeString
  nameWithType: ST_CheckLicense.ExpirationTimeString
  fullName: TwinSharp.ST_CheckLicense.ExpirationTimeString
  type: Field
  source:
    remote:
      path: TwinSharp/Structs.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ExpirationTimeString
    path: ../TwinSharp/Structs.cs
    startLine: 65
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: Expiration time of the license as a string
  example: []
  syntax:
    content: public readonly string ExpirationTimeString
    return:
      type: System.String
    content.vb: Public ReadOnly ExpirationTimeString As String
- uid: TwinSharp.ST_CheckLicense.eResult
  commentId: F:TwinSharp.ST_CheckLicense.eResult
  id: eResult
  parent: TwinSharp.ST_CheckLicense
  langs:
  - csharp
  - vb
  name: eResult
  nameWithType: ST_CheckLicense.eResult
  fullName: TwinSharp.ST_CheckLicense.eResult
  type: Field
  source:
    remote:
      path: TwinSharp/Structs.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: eResult
    path: ../TwinSharp/Structs.cs
    startLine: 70
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: License status
  example: []
  syntax:
    content: public readonly E_LicenseHResult eResult
    return:
      type: TwinSharp.E_LicenseHResult
    content.vb: Public ReadOnly eResult As E_LicenseHResult
- uid: TwinSharp.ST_CheckLicense.nCount
  commentId: F:TwinSharp.ST_CheckLicense.nCount
  id: nCount
  parent: TwinSharp.ST_CheckLicense
  langs:
  - csharp
  - vb
  name: nCount
  nameWithType: ST_CheckLicense.nCount
  fullName: TwinSharp.ST_CheckLicense.nCount
  type: Field
  source:
    remote:
      path: TwinSharp/Structs.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: nCount
    path: ../TwinSharp/Structs.cs
    startLine: 75
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: Number of instances for this license (0=unlimited)
  example: []
  syntax:
    content: public readonly uint nCount
    return:
      type: System.UInt32
    content.vb: Public ReadOnly nCount As UInteger
- uid: TwinSharp.ST_CheckLicense.LicenseName
  commentId: F:TwinSharp.ST_CheckLicense.LicenseName
  id: LicenseName
  parent: TwinSharp.ST_CheckLicense
  langs:
  - csharp
  - vb
  name: LicenseName
  nameWithType: ST_CheckLicense.LicenseName
  fullName: TwinSharp.ST_CheckLicense.LicenseName
  type: Field
  source:
    remote:
      path: TwinSharp/Structs.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: LicenseName
    path: ../TwinSharp/Structs.cs
    startLine: 80
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: Name of the license
  example: []
  syntax:
    content: public string LicenseName
    return:
      type: System.String
    content.vb: Public LicenseName As String
- uid: TwinSharp.ST_CheckLicense.#ctor(System.Byte[],System.String)
  commentId: M:TwinSharp.ST_CheckLicense.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: TwinSharp.ST_CheckLicense
  langs:
  - csharp
  - vb
  name: ST_CheckLicense(byte[], string)
  nameWithType: ST_CheckLicense.ST_CheckLicense(byte[], string)
  fullName: TwinSharp.ST_CheckLicense.ST_CheckLicense(byte[], string)
  type: Constructor
  source:
    remote:
      path: TwinSharp/Structs.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: .ctor
    path: ../TwinSharp/Structs.cs
    startLine: 88
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: Constructor for ST_CheckLicense from a byte array of length 48.
  example: []
  syntax:
    content: public ST_CheckLicense(byte[] bytes, string descriptionText)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: ''
    - id: descriptionText
      type: System.String
      description: ''
    content.vb: Public Sub New(bytes As Byte(), descriptionText As String)
  overload: TwinSharp.ST_CheckLicense.#ctor*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: ''
  nameWithType.vb: ST_CheckLicense.New(Byte(), String)
  fullName.vb: TwinSharp.ST_CheckLicense.New(Byte(), String)
  name.vb: New(Byte(), String)
- uid: TwinSharp.ST_CheckLicense.ToString
  commentId: M:TwinSharp.ST_CheckLicense.ToString
  id: ToString
  parent: TwinSharp.ST_CheckLicense
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ST_CheckLicense.ToString()
  fullName: TwinSharp.ST_CheckLicense.ToString()
  type: Method
  source:
    remote:
      path: TwinSharp/Structs.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ToString
    path: ../TwinSharp/Structs.cs
    startLine: 118
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: Returns a string representation of the license.
  example: []
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: TwinSharp.ST_CheckLicense.ToString*
references:
- uid: TwinSharp
  commentId: N:TwinSharp
  href: TwinSharp.html
  name: TwinSharp
  nameWithType: TwinSharp
  fullName: TwinSharp
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TwinSharp.E_LicenseHResult
  commentId: T:TwinSharp.E_LicenseHResult
  parent: TwinSharp
  href: TwinSharp.E_LicenseHResult.html
  name: E_LicenseHResult
  nameWithType: E_LicenseHResult
  fullName: TwinSharp.E_LicenseHResult
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.Exception
  commentId: T:System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: TwinSharp.ST_CheckLicense.#ctor*
  commentId: Overload:TwinSharp.ST_CheckLicense.#ctor
  href: TwinSharp.ST_CheckLicense.html#TwinSharp_ST_CheckLicense__ctor_System_Byte___System_String_
  name: ST_CheckLicense
  nameWithType: ST_CheckLicense.ST_CheckLicense
  fullName: TwinSharp.ST_CheckLicense.ST_CheckLicense
  nameWithType.vb: ST_CheckLicense.New
  fullName.vb: TwinSharp.ST_CheckLicense.New
  name.vb: New
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: TwinSharp.ST_CheckLicense.ToString*
  commentId: Overload:TwinSharp.ST_CheckLicense.ToString
  href: TwinSharp.ST_CheckLicense.html#TwinSharp_ST_CheckLicense_ToString
  name: ToString
  nameWithType: ST_CheckLicense.ToString
  fullName: TwinSharp.ST_CheckLicense.ToString
