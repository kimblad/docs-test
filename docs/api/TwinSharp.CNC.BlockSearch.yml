### YamlMime:ManagedReference
items:
- uid: TwinSharp.CNC.BlockSearch
  commentId: T:TwinSharp.CNC.BlockSearch
  id: BlockSearch
  parent: TwinSharp.CNC
  children:
  - TwinSharp.CNC.BlockSearch.AutomaticResumption
  - TwinSharp.CNC.BlockSearch.BlockNumberToFind
  - TwinSharp.CNC.BlockSearch.BlockSearchType
  - TwinSharp.CNC.BlockSearch.BreakPoint
  - TwinSharp.CNC.BlockSearch.CoveredDistanceFromProgramStart
  - TwinSharp.CNC.BlockSearch.CoveredDistanceMotionBlockInPerMill
  - TwinSharp.CNC.BlockSearch.MaxPathDeviation
  - TwinSharp.CNC.BlockSearch.NoStopOnResumption
  - TwinSharp.CNC.BlockSearch.ProgramStartAsOfFileOffset
  langs:
  - csharp
  - vb
  name: BlockSearch
  nameWithType: BlockSearch
  fullName: TwinSharp.CNC.BlockSearch
  type: Class
  source:
    remote:
      path: TwinSharp/CNC/BlockSearch.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: BlockSearch
    path: ../TwinSharp/CNC/BlockSearch.cs
    startLine: 9
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: >-
    The operator can start machining at what is called the continuation position at any point in the program. After a program is interrupted (e.g. tool breakage), this is a quick method to reactivate machining at the point of interruption.

    The continuation position can be defined using a number of different block search types(file offset, block counter, block number, etc.).
  example: []
  syntax:
    content: public class BlockSearch
    content.vb: Public Class BlockSearch
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TwinSharp.CNC.BlockSearch.BlockSearchType
  commentId: P:TwinSharp.CNC.BlockSearch.BlockSearchType
  id: BlockSearchType
  parent: TwinSharp.CNC.BlockSearch
  langs:
  - csharp
  - vb
  name: BlockSearchType
  nameWithType: BlockSearch.BlockSearchType
  fullName: TwinSharp.CNC.BlockSearch.BlockSearchType
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BlockSearch.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: BlockSearchType
    path: ../TwinSharp/CNC/BlockSearch.cs
    startLine: 23
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: The continuation position can be defined using a number of different block search types (file offset, block counter, block number, etc.)
  example: []
  syntax:
    content: public BlockSearchType BlockSearchType { get; set; }
    parameters: []
    return:
      type: TwinSharp.CNC.BlockSearchType
    content.vb: Public Property BlockSearchType As BlockSearchType
  overload: TwinSharp.CNC.BlockSearch.BlockSearchType*
- uid: TwinSharp.CNC.BlockSearch.BlockNumberToFind
  commentId: P:TwinSharp.CNC.BlockSearch.BlockNumberToFind
  id: BlockNumberToFind
  parent: TwinSharp.CNC.BlockSearch
  langs:
  - csharp
  - vb
  name: BlockNumberToFind
  nameWithType: BlockSearch.BlockNumberToFind
  fullName: TwinSharp.CNC.BlockSearch.BlockNumberToFind
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BlockSearch.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: BlockNumberToFind
    path: ../TwinSharp/CNC/BlockSearch.cs
    startLine: 32
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Defines the block number at which point actual machining is to continue.
  example: []
  syntax:
    content: public uint BlockNumberToFind { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property BlockNumberToFind As UInteger
  overload: TwinSharp.CNC.BlockSearch.BlockNumberToFind*
- uid: TwinSharp.CNC.BlockSearch.AutomaticResumption
  commentId: P:TwinSharp.CNC.BlockSearch.AutomaticResumption
  id: AutomaticResumption
  parent: TwinSharp.CNC.BlockSearch
  langs:
  - csharp
  - vb
  name: AutomaticResumption
  nameWithType: BlockSearch.AutomaticResumption
  fullName: TwinSharp.CNC.BlockSearch.AutomaticResumption
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BlockSearch.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: AutomaticResumption
    path: ../TwinSharp/CNC/BlockSearch.cs
    startLine: 41
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: This object defines that resumption of motion on the contour occurs automatically.
  example: []
  syntax:
    content: public bool AutomaticResumption { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AutomaticResumption As Boolean
  overload: TwinSharp.CNC.BlockSearch.AutomaticResumption*
- uid: TwinSharp.CNC.BlockSearch.NoStopOnResumption
  commentId: P:TwinSharp.CNC.BlockSearch.NoStopOnResumption
  id: NoStopOnResumption
  parent: TwinSharp.CNC.BlockSearch
  langs:
  - csharp
  - vb
  name: NoStopOnResumption
  nameWithType: BlockSearch.NoStopOnResumption
  fullName: TwinSharp.CNC.BlockSearch.NoStopOnResumption
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BlockSearch.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: NoStopOnResumption
    path: ../TwinSharp/CNC/BlockSearch.cs
    startLine: 50
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: This object defines whether resumption of motion on the contour should occur directly without any operator input.
  example: []
  syntax:
    content: public bool NoStopOnResumption { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NoStopOnResumption As Boolean
  overload: TwinSharp.CNC.BlockSearch.NoStopOnResumption*
- uid: TwinSharp.CNC.BlockSearch.MaxPathDeviation
  commentId: P:TwinSharp.CNC.BlockSearch.MaxPathDeviation
  id: MaxPathDeviation
  parent: TwinSharp.CNC.BlockSearch
  langs:
  - csharp
  - vb
  name: MaxPathDeviation
  nameWithType: BlockSearch.MaxPathDeviation
  fullName: TwinSharp.CNC.BlockSearch.MaxPathDeviation
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BlockSearch.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: MaxPathDeviation
    path: ../TwinSharp/CNC/BlockSearch.cs
    startLine: 61
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: >-
    This object defines the maximum deviation of the axes between actual position and continuation position when machining is resumed after block search. If resumption of motion on the contour is automatic, the maximum path deviation is not considered since the exact continuation position has already been reached. (Default= 0)

    Unit [0.1 µm]
  example: []
  syntax:
    content: public uint MaxPathDeviation { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property MaxPathDeviation As UInteger
  overload: TwinSharp.CNC.BlockSearch.MaxPathDeviation*
- uid: TwinSharp.CNC.BlockSearch.ProgramStartAsOfFileOffset
  commentId: P:TwinSharp.CNC.BlockSearch.ProgramStartAsOfFileOffset
  id: ProgramStartAsOfFileOffset
  parent: TwinSharp.CNC.BlockSearch
  langs:
  - csharp
  - vb
  name: ProgramStartAsOfFileOffset
  nameWithType: BlockSearch.ProgramStartAsOfFileOffset
  fullName: TwinSharp.CNC.BlockSearch.ProgramStartAsOfFileOffset
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BlockSearch.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: ProgramStartAsOfFileOffset
    path: ../TwinSharp/CNC/BlockSearch.cs
    startLine: 70
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: The file offset defines a jump to a known position in the NC program. The program part before the jump point is not evaluated. Processing starts at the jump point as for a program shortened by file offset. This object defines the file offset. (Default value= 0)
  example: []
  syntax:
    content: public int ProgramStartAsOfFileOffset { set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public WriteOnly Property ProgramStartAsOfFileOffset As Integer
  overload: TwinSharp.CNC.BlockSearch.ProgramStartAsOfFileOffset*
- uid: TwinSharp.CNC.BlockSearch.BreakPoint
  commentId: P:TwinSharp.CNC.BlockSearch.BreakPoint
  id: BreakPoint
  parent: TwinSharp.CNC.BlockSearch
  langs:
  - csharp
  - vb
  name: BreakPoint
  nameWithType: BlockSearch.BreakPoint
  fullName: TwinSharp.CNC.BlockSearch.BreakPoint
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BlockSearch.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: BreakPoint
    path: ../TwinSharp/CNC/BlockSearch.cs
    startLine: 79
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: >-
    This object defines an automatic breakpoint by specifying the distance from program start.

    Unit [0.1 µm]
  example: []
  syntax:
    content: public double BreakPoint { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property BreakPoint As Double
  overload: TwinSharp.CNC.BlockSearch.BreakPoint*
- uid: TwinSharp.CNC.BlockSearch.CoveredDistanceFromProgramStart
  commentId: P:TwinSharp.CNC.BlockSearch.CoveredDistanceFromProgramStart
  id: CoveredDistanceFromProgramStart
  parent: TwinSharp.CNC.BlockSearch
  langs:
  - csharp
  - vb
  name: CoveredDistanceFromProgramStart
  nameWithType: BlockSearch.CoveredDistanceFromProgramStart
  fullName: TwinSharp.CNC.BlockSearch.CoveredDistanceFromProgramStart
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BlockSearch.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: CoveredDistanceFromProgramStart
    path: ../TwinSharp/CNC/BlockSearch.cs
    startLine: 89
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: >-
    This object defines the distance from program start or #DISTANCE PROG START CLEAR at which machining is actually supposed to start.

    Unit [0.1 µm]
  example: []
  syntax:
    content: public double CoveredDistanceFromProgramStart { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property CoveredDistanceFromProgramStart As Double
  overload: TwinSharp.CNC.BlockSearch.CoveredDistanceFromProgramStart*
- uid: TwinSharp.CNC.BlockSearch.CoveredDistanceMotionBlockInPerMill
  commentId: P:TwinSharp.CNC.BlockSearch.CoveredDistanceMotionBlockInPerMill
  id: CoveredDistanceMotionBlockInPerMill
  parent: TwinSharp.CNC.BlockSearch
  langs:
  - csharp
  - vb
  name: CoveredDistanceMotionBlockInPerMill
  nameWithType: BlockSearch.CoveredDistanceMotionBlockInPerMill
  fullName: TwinSharp.CNC.BlockSearch.CoveredDistanceMotionBlockInPerMill
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/BlockSearch.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: CoveredDistanceMotionBlockInPerMill
    path: ../TwinSharp/CNC/BlockSearch.cs
    startLine: 99
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: >-
    This object defines the distance covered in the NC block in per mil at which machining is actually supposed to continue. The first part of the block in the block search is then executed without motion and only the remaining part is executed with moved axes. Value range: [0.0 to 1000.0]; default value= 0.0

    Unit [0.1%]
  example: []
  syntax:
    content: public double CoveredDistanceMotionBlockInPerMill { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property CoveredDistanceMotionBlockInPerMill As Double
  overload: TwinSharp.CNC.BlockSearch.CoveredDistanceMotionBlockInPerMill*
references:
- uid: TwinSharp.CNC
  commentId: N:TwinSharp.CNC
  href: TwinSharp.html
  name: TwinSharp.CNC
  nameWithType: TwinSharp.CNC
  fullName: TwinSharp.CNC
  spec.csharp:
  - uid: TwinSharp
    name: TwinSharp
    href: TwinSharp.html
  - name: .
  - uid: TwinSharp.CNC
    name: CNC
    href: TwinSharp.CNC.html
  spec.vb:
  - uid: TwinSharp
    name: TwinSharp
    href: TwinSharp.html
  - name: .
  - uid: TwinSharp.CNC
    name: CNC
    href: TwinSharp.CNC.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TwinSharp.CNC.BlockSearch.BlockSearchType*
  commentId: Overload:TwinSharp.CNC.BlockSearch.BlockSearchType
  href: TwinSharp.CNC.BlockSearch.html#TwinSharp_CNC_BlockSearch_BlockSearchType
  name: BlockSearchType
  nameWithType: BlockSearch.BlockSearchType
  fullName: TwinSharp.CNC.BlockSearch.BlockSearchType
- uid: TwinSharp.CNC.BlockSearchType
  commentId: T:TwinSharp.CNC.BlockSearchType
  parent: TwinSharp.CNC
  href: TwinSharp.CNC.BlockSearchType.html
  name: BlockSearchType
  nameWithType: BlockSearchType
  fullName: TwinSharp.CNC.BlockSearchType
- uid: TwinSharp.CNC.BlockSearch.BlockNumberToFind*
  commentId: Overload:TwinSharp.CNC.BlockSearch.BlockNumberToFind
  href: TwinSharp.CNC.BlockSearch.html#TwinSharp_CNC_BlockSearch_BlockNumberToFind
  name: BlockNumberToFind
  nameWithType: BlockSearch.BlockNumberToFind
  fullName: TwinSharp.CNC.BlockSearch.BlockNumberToFind
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: TwinSharp.CNC.BlockSearch.AutomaticResumption*
  commentId: Overload:TwinSharp.CNC.BlockSearch.AutomaticResumption
  href: TwinSharp.CNC.BlockSearch.html#TwinSharp_CNC_BlockSearch_AutomaticResumption
  name: AutomaticResumption
  nameWithType: BlockSearch.AutomaticResumption
  fullName: TwinSharp.CNC.BlockSearch.AutomaticResumption
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TwinSharp.CNC.BlockSearch.NoStopOnResumption*
  commentId: Overload:TwinSharp.CNC.BlockSearch.NoStopOnResumption
  href: TwinSharp.CNC.BlockSearch.html#TwinSharp_CNC_BlockSearch_NoStopOnResumption
  name: NoStopOnResumption
  nameWithType: BlockSearch.NoStopOnResumption
  fullName: TwinSharp.CNC.BlockSearch.NoStopOnResumption
- uid: TwinSharp.CNC.BlockSearch.MaxPathDeviation*
  commentId: Overload:TwinSharp.CNC.BlockSearch.MaxPathDeviation
  href: TwinSharp.CNC.BlockSearch.html#TwinSharp_CNC_BlockSearch_MaxPathDeviation
  name: MaxPathDeviation
  nameWithType: BlockSearch.MaxPathDeviation
  fullName: TwinSharp.CNC.BlockSearch.MaxPathDeviation
- uid: TwinSharp.CNC.BlockSearch.ProgramStartAsOfFileOffset*
  commentId: Overload:TwinSharp.CNC.BlockSearch.ProgramStartAsOfFileOffset
  href: TwinSharp.CNC.BlockSearch.html#TwinSharp_CNC_BlockSearch_ProgramStartAsOfFileOffset
  name: ProgramStartAsOfFileOffset
  nameWithType: BlockSearch.ProgramStartAsOfFileOffset
  fullName: TwinSharp.CNC.BlockSearch.ProgramStartAsOfFileOffset
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TwinSharp.CNC.BlockSearch.BreakPoint*
  commentId: Overload:TwinSharp.CNC.BlockSearch.BreakPoint
  href: TwinSharp.CNC.BlockSearch.html#TwinSharp_CNC_BlockSearch_BreakPoint
  name: BreakPoint
  nameWithType: BlockSearch.BreakPoint
  fullName: TwinSharp.CNC.BlockSearch.BreakPoint
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: TwinSharp.CNC.BlockSearch.CoveredDistanceFromProgramStart*
  commentId: Overload:TwinSharp.CNC.BlockSearch.CoveredDistanceFromProgramStart
  href: TwinSharp.CNC.BlockSearch.html#TwinSharp_CNC_BlockSearch_CoveredDistanceFromProgramStart
  name: CoveredDistanceFromProgramStart
  nameWithType: BlockSearch.CoveredDistanceFromProgramStart
  fullName: TwinSharp.CNC.BlockSearch.CoveredDistanceFromProgramStart
- uid: TwinSharp.CNC.BlockSearch.CoveredDistanceMotionBlockInPerMill*
  commentId: Overload:TwinSharp.CNC.BlockSearch.CoveredDistanceMotionBlockInPerMill
  href: TwinSharp.CNC.BlockSearch.html#TwinSharp_CNC_BlockSearch_CoveredDistanceMotionBlockInPerMill
  name: CoveredDistanceMotionBlockInPerMill
  nameWithType: BlockSearch.CoveredDistanceMotionBlockInPerMill
  fullName: TwinSharp.CNC.BlockSearch.CoveredDistanceMotionBlockInPerMill
