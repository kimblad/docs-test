### YamlMime:ManagedReference
items:
- uid: TwinSharp.CNC.DynamicPositionLimitation
  commentId: T:TwinSharp.CNC.DynamicPositionLimitation
  id: DynamicPositionLimitation
  parent: TwinSharp.CNC
  children:
  - TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitInterfaceExists(System.Boolean)
  - TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitMonitoringState
  - TwinSharp.CNC.DynamicPositionLimitation.SetLowerPositionLimit(System.Int32)
  langs:
  - csharp
  - vb
  name: DynamicPositionLimitation
  nameWithType: DynamicPositionLimitation
  fullName: TwinSharp.CNC.DynamicPositionLimitation
  type: Class
  source:
    remote:
      path: TwinSharp/CNC/DynamicPositionLimitation.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: DynamicPositionLimitation
    path: ../TwinSharp/CNC/DynamicPositionLimitation.cs
    startLine: 7
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Additionally needs to be activated in the startup parameters by using the keyword FCT_DYN_POS_LIMIT of the parameter P-STUP-00070
  example: []
  syntax:
    content: public class DynamicPositionLimitation
    content.vb: Public Class DynamicPositionLimitation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitInterfaceExists(System.Boolean)
  commentId: M:TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitInterfaceExists(System.Boolean)
  id: LowerPositionLimitInterfaceExists(System.Boolean)
  parent: TwinSharp.CNC.DynamicPositionLimitation
  langs:
  - csharp
  - vb
  name: LowerPositionLimitInterfaceExists(bool)
  nameWithType: DynamicPositionLimitation.LowerPositionLimitInterfaceExists(bool)
  fullName: TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitInterfaceExists(bool)
  type: Method
  source:
    remote:
      path: TwinSharp/CNC/DynamicPositionLimitation.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: LowerPositionLimitInterfaceExists
    path: ../TwinSharp/CNC/DynamicPositionLimitation.cs
    startLine: 25
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Signal to CNC that the lower position limit interface exists and we want to use it.
  example: []
  syntax:
    content: public void LowerPositionLimitInterfaceExists(bool enabled)
    parameters:
    - id: enabled
      type: System.Boolean
      description: ''
    content.vb: Public Sub LowerPositionLimitInterfaceExists(enabled As Boolean)
  overload: TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitInterfaceExists*
  nameWithType.vb: DynamicPositionLimitation.LowerPositionLimitInterfaceExists(Boolean)
  fullName.vb: TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitInterfaceExists(Boolean)
  name.vb: LowerPositionLimitInterfaceExists(Boolean)
- uid: TwinSharp.CNC.DynamicPositionLimitation.SetLowerPositionLimit(System.Int32)
  commentId: M:TwinSharp.CNC.DynamicPositionLimitation.SetLowerPositionLimit(System.Int32)
  id: SetLowerPositionLimit(System.Int32)
  parent: TwinSharp.CNC.DynamicPositionLimitation
  langs:
  - csharp
  - vb
  name: SetLowerPositionLimit(int)
  nameWithType: DynamicPositionLimitation.SetLowerPositionLimit(int)
  fullName: TwinSharp.CNC.DynamicPositionLimitation.SetLowerPositionLimit(int)
  type: Method
  source:
    remote:
      path: TwinSharp/CNC/DynamicPositionLimitation.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: SetLowerPositionLimit
    path: ../TwinSharp/CNC/DynamicPositionLimitation.cs
    startLine: 37
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Sets a position value and describes the lower limit of the position range which the axis should not exceed.
  example: []
  syntax:
    content: public void SetLowerPositionLimit(int position)
    parameters:
    - id: position
      type: System.Int32
      description: 'Unit: 0.1 µm or 10-4 °'
    content.vb: Public Sub SetLowerPositionLimit(position As Integer)
  overload: TwinSharp.CNC.DynamicPositionLimitation.SetLowerPositionLimit*
  nameWithType.vb: DynamicPositionLimitation.SetLowerPositionLimit(Integer)
  fullName.vb: TwinSharp.CNC.DynamicPositionLimitation.SetLowerPositionLimit(Integer)
  name.vb: SetLowerPositionLimit(Integer)
- uid: TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitMonitoringState
  commentId: P:TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitMonitoringState
  id: LowerPositionLimitMonitoringState
  parent: TwinSharp.CNC.DynamicPositionLimitation
  langs:
  - csharp
  - vb
  name: LowerPositionLimitMonitoringState
  nameWithType: DynamicPositionLimitation.LowerPositionLimitMonitoringState
  fullName: TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitMonitoringState
  type: Property
  source:
    remote:
      path: TwinSharp/CNC/DynamicPositionLimitation.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: LowerPositionLimitMonitoringState
    path: ../TwinSharp/CNC/DynamicPositionLimitation.cs
    startLine: 47
  assemblies:
  - TwinSharp
  namespace: TwinSharp.CNC
  summary: Gets the current state of the lower position limit monitoring.
  example: []
  syntax:
    content: public HLI_DYNPL_STATE LowerPositionLimitMonitoringState { get; }
    parameters: []
    return:
      type: TwinSharp.CNC.HLI_DYNPL_STATE
    content.vb: Public ReadOnly Property LowerPositionLimitMonitoringState As HLI_DYNPL_STATE
  overload: TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitMonitoringState*
references:
- uid: TwinSharp.CNC
  commentId: N:TwinSharp.CNC
  href: TwinSharp.html
  name: TwinSharp.CNC
  nameWithType: TwinSharp.CNC
  fullName: TwinSharp.CNC
  spec.csharp:
  - uid: TwinSharp
    name: TwinSharp
    href: TwinSharp.html
  - name: .
  - uid: TwinSharp.CNC
    name: CNC
    href: TwinSharp.CNC.html
  spec.vb:
  - uid: TwinSharp
    name: TwinSharp
    href: TwinSharp.html
  - name: .
  - uid: TwinSharp.CNC
    name: CNC
    href: TwinSharp.CNC.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitInterfaceExists*
  commentId: Overload:TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitInterfaceExists
  href: TwinSharp.CNC.DynamicPositionLimitation.html#TwinSharp_CNC_DynamicPositionLimitation_LowerPositionLimitInterfaceExists_System_Boolean_
  name: LowerPositionLimitInterfaceExists
  nameWithType: DynamicPositionLimitation.LowerPositionLimitInterfaceExists
  fullName: TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitInterfaceExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TwinSharp.CNC.DynamicPositionLimitation.SetLowerPositionLimit*
  commentId: Overload:TwinSharp.CNC.DynamicPositionLimitation.SetLowerPositionLimit
  href: TwinSharp.CNC.DynamicPositionLimitation.html#TwinSharp_CNC_DynamicPositionLimitation_SetLowerPositionLimit_System_Int32_
  name: SetLowerPositionLimit
  nameWithType: DynamicPositionLimitation.SetLowerPositionLimit
  fullName: TwinSharp.CNC.DynamicPositionLimitation.SetLowerPositionLimit
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitMonitoringState*
  commentId: Overload:TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitMonitoringState
  href: TwinSharp.CNC.DynamicPositionLimitation.html#TwinSharp_CNC_DynamicPositionLimitation_LowerPositionLimitMonitoringState
  name: LowerPositionLimitMonitoringState
  nameWithType: DynamicPositionLimitation.LowerPositionLimitMonitoringState
  fullName: TwinSharp.CNC.DynamicPositionLimitation.LowerPositionLimitMonitoringState
- uid: TwinSharp.CNC.HLI_DYNPL_STATE
  commentId: T:TwinSharp.CNC.HLI_DYNPL_STATE
  parent: TwinSharp.CNC
  href: TwinSharp.CNC.HLI_DYNPL_STATE.html
  name: HLI_DYNPL_STATE
  nameWithType: HLI_DYNPL_STATE
  fullName: TwinSharp.CNC.HLI_DYNPL_STATE
