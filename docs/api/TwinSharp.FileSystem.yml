### YamlMime:ManagedReference
items:
- uid: TwinSharp.FileSystem
  commentId: T:TwinSharp.FileSystem
  id: FileSystem
  parent: TwinSharp
  children:
  - TwinSharp.FileSystem.CreateDirectory(System.String)
  - TwinSharp.FileSystem.CreateFileFinder(System.String)
  - TwinSharp.FileSystem.DeleteDirectory(System.String)
  - TwinSharp.FileSystem.Dispose
  - TwinSharp.FileSystem.FileClose(System.UInt16)
  - TwinSharp.FileSystem.FileDelete(System.String)
  - TwinSharp.FileSystem.FileGetString(System.UInt16,System.Boolean@)
  - TwinSharp.FileSystem.FileOpen(System.String,TwinSharp.FileOpenModeFlags)
  - TwinSharp.FileSystem.FilePutString(System.UInt16,System.String)
  - TwinSharp.FileSystem.FileRead(System.UInt16,System.Int32)
  - TwinSharp.FileSystem.FileRename(System.String,System.String)
  - TwinSharp.FileSystem.FileSeek(System.UInt16,System.Int32,System.IO.SeekOrigin)
  - TwinSharp.FileSystem.FileTell(System.UInt32)
  - TwinSharp.FileSystem.FileWrite(System.UInt16,System.Byte[])
  - TwinSharp.FileSystem.GetFileProperties(System.String)
  langs:
  - csharp
  - vb
  name: FileSystem
  nameWithType: FileSystem
  fullName: TwinSharp.FileSystem
  type: Class
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: FileSystem
    path: ../TwinSharp/FileSystem.cs
    startLine: 10
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: >-
    The FileSystem class provides methods for interacting with the file system on a target device using the TwinCAT ADS protocol.

    It allows opening, closing, reading, writing, seeking, deleting files, as well as creating and deleting directories.
  example: []
  syntax:
    content: 'public class FileSystem : IDisposable'
    content.vb: Public Class FileSystem Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TwinSharp.FileSystem.FileOpen(System.String,TwinSharp.FileOpenModeFlags)
  commentId: M:TwinSharp.FileSystem.FileOpen(System.String,TwinSharp.FileOpenModeFlags)
  id: FileOpen(System.String,TwinSharp.FileOpenModeFlags)
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: FileOpen(string, FileOpenModeFlags)
  nameWithType: FileSystem.FileOpen(string, FileOpenModeFlags)
  fullName: TwinSharp.FileSystem.FileOpen(string, TwinSharp.FileOpenModeFlags)
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: FileOpen
    path: ../TwinSharp/FileSystem.cs
    startLine: 25
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: >-
    Creates a new file or opens an existing file for editing.

    Equivavelent to the TwinCAT function block FB_FileOpen
  example: []
  syntax:
    content: public ushort FileOpen(string path, FileOpenModeFlags mode)
    parameters:
    - id: path
      type: System.String
      description: ''
    - id: mode
      type: TwinSharp.FileOpenModeFlags
      description: ''
    return:
      type: System.UInt16
    content.vb: Public Function FileOpen(path As String, mode As FileOpenModeFlags) As UShort
  overload: TwinSharp.FileSystem.FileOpen*
  nameWithType.vb: FileSystem.FileOpen(String, FileOpenModeFlags)
  fullName.vb: TwinSharp.FileSystem.FileOpen(String, TwinSharp.FileOpenModeFlags)
  name.vb: FileOpen(String, FileOpenModeFlags)
- uid: TwinSharp.FileSystem.FileClose(System.UInt16)
  commentId: M:TwinSharp.FileSystem.FileClose(System.UInt16)
  id: FileClose(System.UInt16)
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: FileClose(ushort)
  nameWithType: FileSystem.FileClose(ushort)
  fullName: TwinSharp.FileSystem.FileClose(ushort)
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: FileClose
    path: ../TwinSharp/FileSystem.cs
    startLine: 46
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: >-
    The function block FB_FileClose closes the file, thereby putting it in a defined state for further processing by other programs.

    Equivavelent to the TwinCAT function block FB_FileClose.
  example: []
  syntax:
    content: public void FileClose(ushort handle)
    parameters:
    - id: handle
      type: System.UInt16
      description: ''
    content.vb: Public Sub FileClose(handle As UShort)
  overload: TwinSharp.FileSystem.FileClose*
  nameWithType.vb: FileSystem.FileClose(UShort)
  fullName.vb: TwinSharp.FileSystem.FileClose(UShort)
  name.vb: FileClose(UShort)
- uid: TwinSharp.FileSystem.FileGetString(System.UInt16,System.Boolean@)
  commentId: M:TwinSharp.FileSystem.FileGetString(System.UInt16,System.Boolean@)
  id: FileGetString(System.UInt16,System.Boolean@)
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: FileGetString(ushort, out bool)
  nameWithType: FileSystem.FileGetString(ushort, out bool)
  fullName: TwinSharp.FileSystem.FileGetString(ushort, out bool)
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: FileGetString
    path: ../TwinSharp/FileSystem.cs
    startLine: 66
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: >-
    Reads strings from a file. The string is read up to and including the line feed character, or up to the end of the file or the maximum permitted length of sLine. The null termination is appended automatically. The file must have been opened in text mode.

    Equivavelent to the function block FB_FileGets.
  example: []
  syntax:
    content: public string FileGetString(ushort handle, out bool endOfFile)
    parameters:
    - id: handle
      type: System.UInt16
      description: ''
    - id: endOfFile
      type: System.Boolean
      description: True if end of file is reached.
    return:
      type: System.String
      description: ''
    content.vb: Public Function FileGetString(handle As UShort, endOfFile As Boolean) As String
  overload: TwinSharp.FileSystem.FileGetString*
  nameWithType.vb: FileSystem.FileGetString(UShort, Boolean)
  fullName.vb: TwinSharp.FileSystem.FileGetString(UShort, Boolean)
  name.vb: FileGetString(UShort, Boolean)
- uid: TwinSharp.FileSystem.FilePutString(System.UInt16,System.String)
  commentId: M:TwinSharp.FileSystem.FilePutString(System.UInt16,System.String)
  id: FilePutString(System.UInt16,System.String)
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: FilePutString(ushort, string)
  nameWithType: FileSystem.FilePutString(ushort, string)
  fullName: TwinSharp.FileSystem.FilePutString(ushort, string)
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: FilePutString
    path: ../TwinSharp/FileSystem.cs
    startLine: 98
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: >-
    Writes strings into a file. The string is written to the file up to the null termination, but without the null character. The file must have been opened in text mode.

    Equivalent to the function block FB_FilePuts
  example: []
  syntax:
    content: public void FilePutString(ushort fileHandle, string str)
    parameters:
    - id: fileHandle
      type: System.UInt16
      description: ''
    - id: str
      type: System.String
      description: ''
    content.vb: Public Sub FilePutString(fileHandle As UShort, str As String)
  overload: TwinSharp.FileSystem.FilePutString*
  nameWithType.vb: FileSystem.FilePutString(UShort, String)
  fullName.vb: TwinSharp.FileSystem.FilePutString(UShort, String)
  name.vb: FilePutString(UShort, String)
- uid: TwinSharp.FileSystem.FileRead(System.UInt16,System.Int32)
  commentId: M:TwinSharp.FileSystem.FileRead(System.UInt16,System.Int32)
  id: FileRead(System.UInt16,System.Int32)
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: FileRead(ushort, int)
  nameWithType: FileSystem.FileRead(ushort, int)
  fullName: TwinSharp.FileSystem.FileRead(ushort, int)
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: FileRead
    path: ../TwinSharp/FileSystem.cs
    startLine: 118
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: >-
    The contents of an already opened file can be read. Before a read access, the file must have been opened in the corresponding mode. In addition to the FOPEN_MODEREAD, the appropriate format (FOPEN_MODEBINARY or FOPEN_MODETEXT) is also important to achieve the desired result.

    Equivavalent to the function block FB_FileRead.
  example: []
  syntax:
    content: public byte[] FileRead(ushort handle, int byteCountToRead)
    parameters:
    - id: handle
      type: System.UInt16
      description: ''
    - id: byteCountToRead
      type: System.Int32
      description: Number of bytes to be read.
    return:
      type: System.Byte[]
      description: ''
    content.vb: Public Function FileRead(handle As UShort, byteCountToRead As Integer) As Byte()
  overload: TwinSharp.FileSystem.FileRead*
  nameWithType.vb: FileSystem.FileRead(UShort, Integer)
  fullName.vb: TwinSharp.FileSystem.FileRead(UShort, Integer)
  name.vb: FileRead(UShort, Integer)
- uid: TwinSharp.FileSystem.FileWrite(System.UInt16,System.Byte[])
  commentId: M:TwinSharp.FileSystem.FileWrite(System.UInt16,System.Byte[])
  id: FileWrite(System.UInt16,System.Byte[])
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: FileWrite(ushort, byte[])
  nameWithType: FileSystem.FileWrite(ushort, byte[])
  fullName: TwinSharp.FileSystem.FileWrite(ushort, byte[])
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: FileWrite
    path: ../TwinSharp/FileSystem.cs
    startLine: 148
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: >-
    Writes data into a file. For write access the file must have been opened in the corresponding mode, and it must be closed again for further processing by external programs.

    Equivalent to the function block FB_FileWrite.
  example: []
  syntax:
    content: public uint FileWrite(ushort handle, byte[] data)
    parameters:
    - id: handle
      type: System.UInt16
      description: ''
    - id: data
      type: System.Byte[]
      description: ''
    return:
      type: System.UInt32
      description: The number of bytes that were sucessfully written.
    content.vb: Public Function FileWrite(handle As UShort, data As Byte()) As UInteger
  overload: TwinSharp.FileSystem.FileWrite*
  nameWithType.vb: FileSystem.FileWrite(UShort, Byte())
  fullName.vb: TwinSharp.FileSystem.FileWrite(UShort, Byte())
  name.vb: FileWrite(UShort, Byte())
- uid: TwinSharp.FileSystem.FileSeek(System.UInt16,System.Int32,System.IO.SeekOrigin)
  commentId: M:TwinSharp.FileSystem.FileSeek(System.UInt16,System.Int32,System.IO.SeekOrigin)
  id: FileSeek(System.UInt16,System.Int32,System.IO.SeekOrigin)
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: FileSeek(ushort, int, SeekOrigin)
  nameWithType: FileSystem.FileSeek(ushort, int, SeekOrigin)
  fullName: TwinSharp.FileSystem.FileSeek(ushort, int, System.IO.SeekOrigin)
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: FileSeek
    path: ../TwinSharp/FileSystem.cs
    startLine: 170
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: >-
    Sets the file pointer of an open file to a definable position.

    Equivavalent to the function block FB_FileSeek.
  example: []
  syntax:
    content: public void FileSeek(ushort handle, int position, SeekOrigin origin)
    parameters:
    - id: handle
      type: System.UInt16
      description: ''
    - id: position
      type: System.Int32
      description: ''
    - id: origin
      type: System.IO.SeekOrigin
      description: ''
    content.vb: Public Sub FileSeek(handle As UShort, position As Integer, origin As SeekOrigin)
  overload: TwinSharp.FileSystem.FileSeek*
  nameWithType.vb: FileSystem.FileSeek(UShort, Integer, SeekOrigin)
  fullName.vb: TwinSharp.FileSystem.FileSeek(UShort, Integer, System.IO.SeekOrigin)
  name.vb: FileSeek(UShort, Integer, SeekOrigin)
- uid: TwinSharp.FileSystem.FileTell(System.UInt32)
  commentId: M:TwinSharp.FileSystem.FileTell(System.UInt32)
  id: FileTell(System.UInt32)
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: FileTell(uint)
  nameWithType: FileSystem.FileTell(uint)
  fullName: TwinSharp.FileSystem.FileTell(uint)
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: FileTell
    path: ../TwinSharp/FileSystem.cs
    startLine: 197
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: >-
    Determines the current position of the file pointer. The position indicates the relative offset from the start of the file. 

    Equivavalent to the function block FB_FileTell.

    Note that for files opened in "Append at end of file" mode, the current position is determined by the last I/O operation, not by the position of the next write access.

    After a read operation, for example, the file pointer is at the position where the next read access will take place, not at the position where the next write access will take place. In append mode, the file pointer is always moved to the end before the write operation.

    If no previous I/O operation was performed and the file was opened in append mode, the file pointer is at the start of the file.
  example: []
  syntax:
    content: public int FileTell(uint handle)
    parameters:
    - id: handle
      type: System.UInt32
      description: ''
    return:
      type: System.Int32
      description: The current position of the file pointer.
    content.vb: Public Function FileTell(handle As UInteger) As Integer
  overload: TwinSharp.FileSystem.FileTell*
  nameWithType.vb: FileSystem.FileTell(UInteger)
  fullName.vb: TwinSharp.FileSystem.FileTell(UInteger)
  name.vb: FileTell(UInteger)
- uid: TwinSharp.FileSystem.FileDelete(System.String)
  commentId: M:TwinSharp.FileSystem.FileDelete(System.String)
  id: FileDelete(System.String)
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: FileDelete(string)
  nameWithType: FileSystem.FileDelete(string)
  fullName: TwinSharp.FileSystem.FileDelete(string)
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: FileDelete
    path: ../TwinSharp/FileSystem.cs
    startLine: 217
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: >-
    Deletes a file from the data storage device.

    Equivavalent to the function block FB_FileDelete.
  example: []
  syntax:
    content: public void FileDelete(string pathName)
    parameters:
    - id: pathName
      type: System.String
      description: File name, including the full path.
    content.vb: Public Sub FileDelete(pathName As String)
  overload: TwinSharp.FileSystem.FileDelete*
  nameWithType.vb: FileSystem.FileDelete(String)
  fullName.vb: TwinSharp.FileSystem.FileDelete(String)
  name.vb: FileDelete(String)
- uid: TwinSharp.FileSystem.FileRename(System.String,System.String)
  commentId: M:TwinSharp.FileSystem.FileRename(System.String,System.String)
  id: FileRename(System.String,System.String)
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: FileRename(string, string)
  nameWithType: FileSystem.FileRename(string, string)
  fullName: TwinSharp.FileSystem.FileRename(string, string)
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: FileRename
    path: ../TwinSharp/FileSystem.cs
    startLine: 235
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: >-
    Can be used to rename a file.

    Equivavalent to the function block FB_FileRename.
  example: []
  syntax:
    content: public void FileRename(string oldPath, string newPath)
    parameters:
    - id: oldPath
      type: System.String
      description: ''
    - id: newPath
      type: System.String
      description: ''
    content.vb: Public Sub FileRename(oldPath As String, newPath As String)
  overload: TwinSharp.FileSystem.FileRename*
  nameWithType.vb: FileSystem.FileRename(String, String)
  fullName.vb: TwinSharp.FileSystem.FileRename(String, String)
  name.vb: FileRename(String, String)
- uid: TwinSharp.FileSystem.CreateDirectory(System.String)
  commentId: M:TwinSharp.FileSystem.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: CreateDirectory(string)
  nameWithType: FileSystem.CreateDirectory(string)
  fullName: TwinSharp.FileSystem.CreateDirectory(string)
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: CreateDirectory
    path: ../TwinSharp/FileSystem.cs
    startLine: 251
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: 'Create a new folder on the target. Note: does not create folders recursively.'
  example: []
  syntax:
    content: public void CreateDirectory(string path)
    parameters:
    - id: path
      type: System.String
      description: ''
    content.vb: Public Sub CreateDirectory(path As String)
  overload: TwinSharp.FileSystem.CreateDirectory*
  nameWithType.vb: FileSystem.CreateDirectory(String)
  fullName.vb: TwinSharp.FileSystem.CreateDirectory(String)
  name.vb: CreateDirectory(String)
- uid: TwinSharp.FileSystem.DeleteDirectory(System.String)
  commentId: M:TwinSharp.FileSystem.DeleteDirectory(System.String)
  id: DeleteDirectory(System.String)
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: DeleteDirectory(string)
  nameWithType: FileSystem.DeleteDirectory(string)
  fullName: TwinSharp.FileSystem.DeleteDirectory(string)
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: DeleteDirectory
    path: ../TwinSharp/FileSystem.cs
    startLine: 270
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: >-
    Can be used to delete a directory from the data storage device.

    A directory containing files cannot be deleted.

    Equivavalent to the function block FB_RemoveDir.
  example: []
  syntax:
    content: public void DeleteDirectory(string path)
    parameters:
    - id: path
      type: System.String
      description: ''
    content.vb: Public Sub DeleteDirectory(path As String)
  overload: TwinSharp.FileSystem.DeleteDirectory*
  nameWithType.vb: FileSystem.DeleteDirectory(String)
  fullName.vb: TwinSharp.FileSystem.DeleteDirectory(String)
  name.vb: DeleteDirectory(String)
- uid: TwinSharp.FileSystem.GetFileProperties(System.String)
  commentId: M:TwinSharp.FileSystem.GetFileProperties(System.String)
  id: GetFileProperties(System.String)
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: GetFileProperties(string)
  nameWithType: FileSystem.GetFileProperties(string)
  fullName: TwinSharp.FileSystem.GetFileProperties(string)
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: GetFileProperties
    path: ../TwinSharp/FileSystem.cs
    startLine: 287
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: ''
  example: []
  syntax:
    content: public ST_FindFileEntry GetFileProperties(string path)
    parameters:
    - id: path
      type: System.String
      description: ''
    return:
      type: TwinSharp.ST_FindFileEntry
      description: ''
    content.vb: Public Function GetFileProperties(path As String) As ST_FindFileEntry
  overload: TwinSharp.FileSystem.GetFileProperties*
  nameWithType.vb: FileSystem.GetFileProperties(String)
  fullName.vb: TwinSharp.FileSystem.GetFileProperties(String)
  name.vb: GetFileProperties(String)
- uid: TwinSharp.FileSystem.CreateFileFinder(System.String)
  commentId: M:TwinSharp.FileSystem.CreateFileFinder(System.String)
  id: CreateFileFinder(System.String)
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: CreateFileFinder(string)
  nameWithType: FileSystem.CreateFileFinder(string)
  fullName: TwinSharp.FileSystem.CreateFileFinder(string)
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: CreateFileFinder
    path: ../TwinSharp/FileSystem.cs
    startLine: 379
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: Use a file finder to search for files on target device.
  example: []
  syntax:
    content: public FileFinder CreateFileFinder(string searchQuery)
    parameters:
    - id: searchQuery
      type: System.String
      description: A valid directory name or directory with file name as string. The string can contain (* and ? ) as wildcards. If the path ends with a wildcard, dot or the directory name, the user must have access rights to this path and its subdirectories.
    return:
      type: TwinSharp.FileFinder
      description: ''
    content.vb: Public Function CreateFileFinder(searchQuery As String) As FileFinder
  overload: TwinSharp.FileSystem.CreateFileFinder*
  nameWithType.vb: FileSystem.CreateFileFinder(String)
  fullName.vb: TwinSharp.FileSystem.CreateFileFinder(String)
  name.vb: CreateFileFinder(String)
- uid: TwinSharp.FileSystem.Dispose
  commentId: M:TwinSharp.FileSystem.Dispose
  id: Dispose
  parent: TwinSharp.FileSystem
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: FileSystem.Dispose()
  fullName: TwinSharp.FileSystem.Dispose()
  type: Method
  source:
    remote:
      path: TwinSharp/FileSystem.cs
      branch: main
      repo: https://github.com/kimblad/docs-test.git
    id: Dispose
    path: ../TwinSharp/FileSystem.cs
    startLine: 404
  assemblies:
  - TwinSharp
  namespace: TwinSharp
  summary: Disposes the File System object. Disposes the ADS client used.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: TwinSharp.FileSystem.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: TwinSharp
  commentId: N:TwinSharp
  href: TwinSharp.html
  name: TwinSharp
  nameWithType: TwinSharp
  fullName: TwinSharp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TwinSharp.FileSystem.FileOpen*
  commentId: Overload:TwinSharp.FileSystem.FileOpen
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_FileOpen_System_String_TwinSharp_FileOpenModeFlags_
  name: FileOpen
  nameWithType: FileSystem.FileOpen
  fullName: TwinSharp.FileSystem.FileOpen
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TwinSharp.FileOpenModeFlags
  commentId: T:TwinSharp.FileOpenModeFlags
  parent: TwinSharp
  href: TwinSharp.FileOpenModeFlags.html
  name: FileOpenModeFlags
  nameWithType: FileOpenModeFlags
  fullName: TwinSharp.FileOpenModeFlags
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: TwinSharp.FileSystem.FileClose*
  commentId: Overload:TwinSharp.FileSystem.FileClose
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_FileClose_System_UInt16_
  name: FileClose
  nameWithType: FileSystem.FileClose
  fullName: TwinSharp.FileSystem.FileClose
- uid: TwinSharp.FileSystem.FileGetString*
  commentId: Overload:TwinSharp.FileSystem.FileGetString
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_FileGetString_System_UInt16_System_Boolean__
  name: FileGetString
  nameWithType: FileSystem.FileGetString
  fullName: TwinSharp.FileSystem.FileGetString
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TwinSharp.FileSystem.FilePutString*
  commentId: Overload:TwinSharp.FileSystem.FilePutString
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_FilePutString_System_UInt16_System_String_
  name: FilePutString
  nameWithType: FileSystem.FilePutString
  fullName: TwinSharp.FileSystem.FilePutString
- uid: TwinSharp.FileSystem.FileRead*
  commentId: Overload:TwinSharp.FileSystem.FileRead
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_FileRead_System_UInt16_System_Int32_
  name: FileRead
  nameWithType: FileSystem.FileRead
  fullName: TwinSharp.FileSystem.FileRead
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: TwinSharp.FileSystem.FileWrite*
  commentId: Overload:TwinSharp.FileSystem.FileWrite
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_FileWrite_System_UInt16_System_Byte___
  name: FileWrite
  nameWithType: FileSystem.FileWrite
  fullName: TwinSharp.FileSystem.FileWrite
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: TwinSharp.FileSystem.FileSeek*
  commentId: Overload:TwinSharp.FileSystem.FileSeek
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_FileSeek_System_UInt16_System_Int32_System_IO_SeekOrigin_
  name: FileSeek
  nameWithType: FileSystem.FileSeek
  fullName: TwinSharp.FileSystem.FileSeek
- uid: System.IO.SeekOrigin
  commentId: T:System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.seekorigin
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: TwinSharp.FileSystem.FileTell*
  commentId: Overload:TwinSharp.FileSystem.FileTell
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_FileTell_System_UInt32_
  name: FileTell
  nameWithType: FileSystem.FileTell
  fullName: TwinSharp.FileSystem.FileTell
- uid: TwinSharp.FileSystem.FileDelete*
  commentId: Overload:TwinSharp.FileSystem.FileDelete
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_FileDelete_System_String_
  name: FileDelete
  nameWithType: FileSystem.FileDelete
  fullName: TwinSharp.FileSystem.FileDelete
- uid: TwinSharp.FileSystem.FileRename*
  commentId: Overload:TwinSharp.FileSystem.FileRename
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_FileRename_System_String_System_String_
  name: FileRename
  nameWithType: FileSystem.FileRename
  fullName: TwinSharp.FileSystem.FileRename
- uid: TwinSharp.FileSystem.CreateDirectory*
  commentId: Overload:TwinSharp.FileSystem.CreateDirectory
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_CreateDirectory_System_String_
  name: CreateDirectory
  nameWithType: FileSystem.CreateDirectory
  fullName: TwinSharp.FileSystem.CreateDirectory
- uid: TwinSharp.FileSystem.DeleteDirectory*
  commentId: Overload:TwinSharp.FileSystem.DeleteDirectory
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_DeleteDirectory_System_String_
  name: DeleteDirectory
  nameWithType: FileSystem.DeleteDirectory
  fullName: TwinSharp.FileSystem.DeleteDirectory
- uid: TwinSharp.FileSystem.GetFileProperties*
  commentId: Overload:TwinSharp.FileSystem.GetFileProperties
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_GetFileProperties_System_String_
  name: GetFileProperties
  nameWithType: FileSystem.GetFileProperties
  fullName: TwinSharp.FileSystem.GetFileProperties
- uid: TwinSharp.ST_FindFileEntry
  commentId: T:TwinSharp.ST_FindFileEntry
  parent: TwinSharp
  href: TwinSharp.ST_FindFileEntry.html
  name: ST_FindFileEntry
  nameWithType: ST_FindFileEntry
  fullName: TwinSharp.ST_FindFileEntry
- uid: TwinSharp.FileSystem.CreateFileFinder*
  commentId: Overload:TwinSharp.FileSystem.CreateFileFinder
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_CreateFileFinder_System_String_
  name: CreateFileFinder
  nameWithType: FileSystem.CreateFileFinder
  fullName: TwinSharp.FileSystem.CreateFileFinder
- uid: TwinSharp.FileFinder
  commentId: T:TwinSharp.FileFinder
  parent: TwinSharp
  href: TwinSharp.FileFinder.html
  name: FileFinder
  nameWithType: FileFinder
  fullName: TwinSharp.FileFinder
- uid: TwinSharp.FileSystem.Dispose*
  commentId: Overload:TwinSharp.FileSystem.Dispose
  href: TwinSharp.FileSystem.html#TwinSharp_FileSystem_Dispose
  name: Dispose
  nameWithType: FileSystem.Dispose
  fullName: TwinSharp.FileSystem.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
